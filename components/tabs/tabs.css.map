{"version":3,"sources":["../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-general.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-typography.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-color.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-components.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-spacing.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/settings/_settings-utilities.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/get-last.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/append-important.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/de-list.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/error.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/error-not-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/get-default.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/has-important.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/map-collect.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/map-deep-get.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/multi-cat.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/remove.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/smart-quote.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/str-replace.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/str-split.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/strip-unit.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/to-map.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/to-number.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/general/unpack.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/get-system-color.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/set-theme-color.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/utilities/color.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/units/px-to-rem.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/units/rem-to-px.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/units/rem-to-user-em.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/units/spacing-multiple.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/output/number-to-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/units/units.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/variables/font-type-tokens.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/variables/luminance-grade-ranges.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/output/ns.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/tokens/font/line-height.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/tokens/font/measure.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/validate-typeface-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/cap-height.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/convert-to-font-type.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/font-sources.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/get-font-stack.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/get-typeface-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/normalize-type-scale.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/font/system-type-scale.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/variables/project-easing.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/_deprecated.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/advanced-color.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/is-system-color-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/is-theme-color-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/color-token-assignment.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/decompose-color-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/color-token-family.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/color-token-grade.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/is-color-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/math/pow.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/calculate-grade.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/color-token-type.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/color-token-variant.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/magic-number.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/wcag-magic-number.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/is-accessible-magic-number.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/next-token.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/get-link-tokens-from-bg.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/color/test-color.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/grid/columns.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/_properties.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/output/get-uswds-value.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/output/get-standard-values.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/utilities/etc.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/functions/utilities/utility-font.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/utilities/_font.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/typography/typeset.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/mixins/_utility-builder.scss","../node_modules/@uswds/uswds/packages/uswds-core/src/styles/_notifications.scss","../sass/uswds/_settings.scss","custom/tabs/tabs.scss","custom/tabs/tabs.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;CAAA;AAmBA;;;;;;CAAA;AAUA;;;;;;;;;CAAA;AAcA;;;;CAAA;AAqBA;;;;;;;;;;;CAAA;AAeA;;;;;;;CAAA;AAWA;;;;;;;;CAAA;AAYA;;;;CAAA;AAWA;;;;CAAA;ACjHA;;;;;;;;;;;;;;;CAAA;AAiBA;;;;;;;;;;;;;;;;;;CAAA;AAkCA;;;;;;;;;;;;CAAA;AAkBA;;;;;;;CAAA;AAWA;;;;;;CAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;AAqDA;;;;;;;;;;;;;;;;;;;;CAAA;AAwCA;;;;;;;;;;;;;;;;;;;;CAAA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;AA+DA;;;;;;;;;;;;;;;CAAA;AAuBA;;;;;;;;;CAAA;AAqBA;;;;;;;CAAA;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;ACtVA;;;;;;;;;;;;;;;CAAA;AAmBA;;;;CAAA;AA2DA;;;;CAAA;AAmDA;;;;CAAA;AC/HA;;;;;;;;;;;;;;;CAAA;ACFA;;;;;;;;;;;;;;;;CAAA;AAkBA;;;;;;;;;;;;;;;;;;CAAA;AAwBA;;;;;;;;;;;;;CAAA;AAuBA;;;;;;;;;;;;CAAA;AAgBA;;;;CAAA;ACjFA;;;;;;;;;;;;;;;CAAA;AAsBA;;;;;;;;CAAA;AAmCA;;;;;;;;;;CAAA;AAcA;;;;CAAA;AA2uBA;;;;CAAA;AClzBA;;;;;;;CAAA;ACAA;;;;;;CAAA;ACAA;;;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;CAAA;ACAA;;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;;CAAA;ACAA;;;;;;;;;;CAAA;ACAA;;;;;;CAAA;ACAA;;;;;;CAAA;ACAA;;;;;;;;CAAA;ACEA;;;;;;;CAAA;ACCA;;;;;;;CAAA;ACHA;;;;;;;;;CAAA;ACAA;;;;;;;;;;;CAAA;ACAA;;;;;;;;;CAAA;ACAA;;;;;;;;;;CAAA;ACAA;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;CAAA;ACGA;;;;;;CAAA;ACHA;;;;;;CAAA;ACAA;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;CAAA;ACAA;;;;CAAA;ACAA;;;;;;;;CAAA;ACAA;;;;;;CAAA;ACAA;;;;;;;;CAAA;ACMA;;;;;;;;;;;;;;;CAAA;ACNA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;CAAA;ACAA;;;;CAAA;ACAA;;;;;;;;;;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACMA;;;;;;;;CAAA;AA8BA;;;;CAAA;AAMA;;CAAA;AAkBA;;CAAA;AAaA;;CAAA;AAyBA;;CAAA;AClGA;;;;;;;CAAA;ACAA;;;;;;;CAAA;ACAA;;;;;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAA;ACQA;;;;;;;;;;;CAAA;ACJA;;;;;;;;;;;CAAA;ACJA;;;;CAAA;ACUA;;;;;;;;;;CAAA;ACPA;;;;;;;CAAA;ACQA;;;;;;;CAAA;AAoBA;;;;;;;;CAAA;AAqBA;;;;;;CAAA;AAeA;;;;;;CAAA;AAeA;;;;;;;;CAAA;AAyBA;;;;;;;;CAAA;AA8BA;;;;;;CAAA;AAeA;;;;;;;CAAA;AAgBA;;;;;;;CAAA;AAgBA;;;;;;;CAAA;AAgBA;;;;;;;CAAA;AAgDA;;;;;;;;CAAA;AChPA;;;;;;;;;;;;CAAA;ACNA;;;;;;CAAA;AAYA;;;;;;;;CAAA;AAcA;;;;;;;;;;CAAA;ACpBA;;;;;;;;;CAAA;ACRA,wCAAA;AAaA;;;;;;;;CAAA;AAmCA;;;;;;;;;;;;;CAAA;AAgGA;;;;;;;;;CAAA;AA6NA,qBAAA;AC7WA;;;;;;;;;CAAA;AAaA,oBAAA;AAyFA,oBAAA;ACtGA;;;;;;;CAAA;ACGA,0EAAA;AAGA;EACE,iCAAA;EACA,wCAAA;EACA,6CAAA;EACA,+BAAA;EACA,0BAAA;EACA,iCAAA;EACA,6BAAA;EACA,sBAAA;EACA,gCAAA;EACA,sCAAA;EACA,wBAAA;EACA,4BAAA;EACA,gCAAA;EAEA,aAAA;EACA,sBAAA;EACA,WAAA;EACA,SAAA;EACA,sBAAA,EAAA,2DAAA;EACA,UAAA;EACA,gBAAA;ACi2CF;AD/1CE;EAvBF;IAwBI,mBAAA;IACA,eAAA;ECk2CF;AACF;;AD/1CA;EACE,aAAA;EACA,SAAA;EACA,qDAAA;EAYA,wCAAA;EAKA,mDAAA;EAKA,4CAAA;AC+0CF;ADn2CE;EACE,aAAA;ACq2CJ;ADl2CE;EATF;IAUI,aAAA;IACA,mBAAA;IACA,wDAAA;ECq2CF;AACF;ADl2CE;EACE,aAAA;ACo2CJ;ADh2CE;EACE,aAAA;ACk2CJ;AD91CE;EACE,cAAA;ACg2CJ;AD91CI;EAHF;IAII,aAAA;ECi2CJ;AACF;;AD71CA;EACE,aAAA;EACA,YAAA;EACA,mBAAA;EACA,0BAAA;EACA,gBAAA;EACA,0CAAA;EACA,4DAAA;EACA,qBAAA;EACA,0CAAA;EACA,6BAAA;EACA,+DAAA;EACA,8CAAA;EACA,gCAAA;EAwCA,oEAAA;ACyzCF;AD/1CE;EACE,oCAAA;EACA,oDAAA;ACi2CJ;AD91CE;EACE,kBAAA;EACA,8CAAA;EACA,oBAAA;ACg2CJ;AD71CE;EACE,kBAAA,EAAA,kCAAA;EACA,oCAAA;EACA,gBAAA;EAEA;;;IAAA;ACi2CJ;AD71CI;EACE,kBAAA;EACA,sDAAA;EACA,uDAAA;EACA,iDAAA;EACA,WAAA;EACA,qFAAA;AC+1CN;AD71CM;EARF;IASI,qDAAA;IACA,gDAAA;IACA,SAAA;IACA,oFAAA;IACA,sBAAA;ECg2CN;AACF;AD11CI;EADF;IAEI,yBAAA;IACA,6BAAA;EC61CJ;AACF;;ADz1CA,mEAAA;AACA;EACE,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,yBAAA;EACA,eAAA;EACA,oDAAA;EACA,eAAA;EACA,+DAAA;EACA,8CAAA;EAYA,qEAAA;ACi1CF;AD31CE;EACE,oDAAA;AC61CJ;AD11CE;EACE,kBAAA;EACA,yCAAA;EACA,aAAA;AC41CJ;ADx1CE;EACE,aAAA;AC01CJ;ADv1CE;EA1BF;IA2BI,aAAA;EC01CF;AACF;;ADv1CA;EACE,kBAAA;EACA,cAAA;EACA,gBAAA;EACA,YAAA;EACA,uDAAA;AC01CF;ADx1CE;EACE,kBAAA;EACA,qBAAA;EACA,cAAA;EACA,WAAA;EACA,mIAAA;EACA,yDAAA;AC01CJ;ADx1CI;EACE,oBAAA;AC01CN;ADx1CM;EACE,kCAAA;EACA,wBAAA;AC01CR;ADt1CI;EACE,kCAAA;ACw1CN;ADt1CM;EACE,UAAA;ACw1CR;ADp1CI;EACE,mCAAA;ACs1CN;ADp1CM;EACE,kCAAA;EACA,yBAAA;ACs1CR","file":"tabs.css","sourcesContent":["/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nGENERAL SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS style tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens\n----------------------------------------\n*/\n\n@use \"sass:map\";\n\n/*\n----------------------------------------\nImage path\n----------------------------------------\nRelative image file path\n----------------------------------------\n*/\n\n$theme-image-path: \"../img\" !default;\n\n/*\n----------------------------------------\nShow compile warnings\n----------------------------------------\nShow Sass warnings when functions and\nmixins use non-standard tokens.\nAND\nShow updates and notifications.\n----------------------------------------\n*/\n\n$theme-show-compile-warnings: true !default;\n$theme-show-notifications: true !default;\n\n/*\n----------------------------------------\nNamespace\n----------------------------------------\n*/\n\n$theme-namespace: () !default;\n$theme-namespace-complete: map.deep-merge(\n  (\n    \"grid\": (\n      namespace: \"grid-\",\n      output: true,\n    ),\n    \"utility\": (\n      namespace: \"u-\",\n      output: false,\n    ),\n  ),\n  $theme-namespace\n) !default;\n\n/*\n----------------------------------------\nPrefix separator\n----------------------------------------\nSet the character the separates\nresponsive and state prefixes from the\nmain class name.\nThe default (\":\") needs to be preceded\nby two backslashes to be properly\nescaped.\n----------------------------------------\n*/\n\n$theme-prefix-separator: \"\\\\:\" !default;\n\n/*\n----------------------------------------\nLayout grid\n----------------------------------------\nShould the layout grid classes output\nwith !important\n----------------------------------------\n*/\n\n$theme-layout-grid-use-important: false !default;\n\n/*\n----------------------------------------\nBorder box sizing\n----------------------------------------\nWhen set to true, sets the box-sizing\nproperty of all site elements to\n`border-box`.\n----------------------------------------\n*/\n\n$theme-global-border-box-sizing: true !default;\n\n/*\n----------------------------------------\nFocus styles\n----------------------------------------\n*/\n\n$theme-focus-color: \"blue-40v\" !default;\n$theme-focus-offset: 0 !default;\n$theme-focus-style: solid !default;\n$theme-focus-width: 0.5 !default;\n\n/*\n----------------------------------------\nIcons\n----------------------------------------\n*/\n\n$theme-icon-image-size: 2 !default;\n","/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nTYPOGRAPHY SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS typography tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens/typesetting/overview/\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nRoot font size\n----------------------------------------\nSetting $theme-respect-user-font-size to\ntrue sets the root font size to 100% and\nuses ems for media queries\n----------------------------------------\n$theme-root-font-size only applies when\n$theme-respect-user-font-size is set to\nfalse.\n\nThis will set the root font size\nas a specific px value and use px values\nfor media queries.\n\nAccepts true or false\n----------------------------------------\n*/\n\n$theme-respect-user-font-size: true !default;\n\n// $theme-root-font-size only applies when\n// $theme-respect-user-font-size is set to\n// false.\n\n// This will set the root font size\n// as a specific px value and use px values\n// for media queries.\n\n// Accepts values in px\n\n$theme-root-font-size: 10px !default;\n\n/*\n----------------------------------------\nGlobal styles\n----------------------------------------\nAdds basic styling for the following\nunclassed elements:\n\n- paragraph: paragraph text\n- link: links\n- content: paragraph text, links,\n  headings, lists, and tables\n----------------------------------------\n*/\n\n$theme-global-paragraph-styles: false !default;\n$theme-global-link-styles: false !default;\n$theme-global-content-styles: false !default;\n\n/*\n----------------------------------------\nBroswer compatibility mode\n----------------------------------------\nWhen true, outputs woff and ttf font \nformats in addition to woff2\n----------------------------------------\n*/\n\n$theme-font-browser-compatibility: false !default;\n\n/*\n----------------------------------------\nFont path\n----------------------------------------\nRelative font file path\n----------------------------------------\n*/\n\n$theme-font-path: \"../fonts\" !default;\n\n/*\n----------------------------------------\nCustom typeface tokens\n----------------------------------------\nAdd a new custom typeface token if\nyour project uses a typeface not already\ndefined by USWDS.\n----------------------------------------\nUSWDS defines the following tokens\nby default:\n----------------------------------------\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\n----------------------------------------\nAdd as many new tokens as you have\ncustom typefaces. Reference your new\ntoken(s) in the type-based font settings\nusing the quoted name of the token.\n\nFor example:\n\n$theme-font-type-cond: 'example-font-token';\n\ndisplay-name:\nThe display name of your font\n\ncap-height:\nThe height of a 500px `N` in Sketch\n----------------------------------------\nYou should change `example-[style]-token`\nnames to something more descriptive.\n----------------------------------------\n*/\n\n$theme-typeface-tokens: (\n  example-serif-token: (\n    display-name: \"Example Serif Display Name\",\n    cap-height: 364px,\n  ),\n  example-sans-token: (\n    display-name: \"Example Sans Display Name\",\n    cap-height: 364px,\n  ),\n) !default;\n\n/*\n----------------------------------------\nType-based font settings\n----------------------------------------\nSet the type-based tokens for your\nproject from the following tokens,\nor from any new font tokens you added in\n$theme-typeface-tokens.\n----------------------------------------\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\n----------------------------------------\n*/\n\n// condensed\n$theme-font-type-cond: false !default;\n\n// icon\n$theme-font-type-icon: false !default;\n\n// language-specific\n$theme-font-type-lang: false !default;\n\n// monospace\n$theme-font-type-mono: \"roboto-mono\" !default;\n\n// sans-serif\n$theme-font-type-sans: \"source-sans-pro\" !default;\n\n// serif\n$theme-font-type-serif: \"merriweather\" !default;\n\n/*\n----------------------------------------\nCustom font stacks\n----------------------------------------\nAdd custom font stacks to any of the\ntype-based fonts. Any USWDS typeface\ntoken already has a default stack.\n\nCustom stacks don't need to include the\nfont's display name. It will\nautomatically appear at the start of\nthe stack.\n----------------------------------------\nExample:\n$theme-font-type-sans: 'source-sans-pro';\n$theme-font-sans-custom-stack: \"Helvetica Neue\", Helvetica, Arial, sans;\n\nOutput:\nfont-family: \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans;\n----------------------------------------\n*/\n\n$theme-font-cond-custom-stack: false !default;\n$theme-font-icon-custom-stack: false !default;\n$theme-font-lang-custom-stack: false !default;\n$theme-font-mono-custom-stack: false !default;\n$theme-font-sans-custom-stack: false !default;\n$theme-font-serif-custom-stack: false !default;\n\n/*\n----------------------------------------\nAdd any custom font source files\n----------------------------------------\nIf you want USWDS to generate additional\n@font-face declarations, add your font\ndata below, following the example that\nfollows.\n----------------------------------------\nUSWDS automatically generates @font-face\ndeclarations for the following\n\n'merriweather'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n\nThese typefaces not require custom\nsource files.\n----------------------------------------\nEXAMPLE\n\n- dir:\n  Directory relative to $theme-font-path\n- This directory should include fonts saved as\n  .woff2\n  ExampleSerif-Normal.woff2\n\n$theme-font-serif-custom-src: (\n  dir: 'custom/example-serif',\n  roman: (\n    100: false,\n    200: false,\n    300: 'ExampleSerif-Light',\n    400: 'ExampleSerif-Normal',\n    500: false,\n    600: false,\n    700: 'ExampleSerif-Bold',\n    800: false,\n    900: false,\n  ),\n  italic: (\n    100: false,\n    200: false,\n    300: 'ExampleSerif-LightItalic',\n    400: 'ExampleSerif-Italic',\n    500: false,\n    600: false,\n    700: 'ExampleSerif-BoldItalic',\n    800: false,\n    900: false,\n  ),\n);\n----------------------------------------\n*/\n\n$theme-font-cond-custom-src: false !default;\n$theme-font-icon-custom-src: false !default;\n$theme-font-lang-custom-src: false !default;\n$theme-font-mono-custom-src: false !default;\n$theme-font-sans-custom-src: false !default;\n$theme-font-serif-custom-src: false !default;\n\n/*\n----------------------------------------\nRole-based font settings\n----------------------------------------\nSet the role-based tokens for your\nproject from the following font-type\ntokens.\n----------------------------------------\n'cond'\n'icon'\n'lang'\n'mono'\n'sans'\n'serif'\n----------------------------------------\n*/\n\n$theme-font-role-ui: \"sans\" !default;\n$theme-font-role-heading: \"serif\" !default;\n$theme-font-role-body: \"sans\" !default;\n$theme-font-role-code: \"mono\" !default;\n$theme-font-role-alt: \"serif\" !default;\n\n/*\n----------------------------------------\nType scale\n----------------------------------------\nDefine your project's type scale using\nvalues from the USWDS system type scale\n\n1-20\n----------------------------------------\n*/\n\n$theme-type-scale-3xs: 2 !default;\n$theme-type-scale-2xs: 3 !default;\n$theme-type-scale-xs: 4 !default;\n$theme-type-scale-sm: 5 !default;\n$theme-type-scale-md: 6 !default;\n$theme-type-scale-lg: 9 !default;\n$theme-type-scale-xl: 12 !default;\n$theme-type-scale-2xl: 14 !default;\n$theme-type-scale-3xl: 15 !default;\n\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nAssign weights 100-900\nOr use `false` for unneeded weights.\n----------------------------------------\n*/\n\n$theme-font-weight-thin: false !default;\n$theme-font-weight-light: 300 !default;\n$theme-font-weight-normal: 400 !default;\n$theme-font-weight-medium: false !default;\n$theme-font-weight-semibold: false !default;\n$theme-font-weight-bold: 700 !default;\n$theme-font-weight-heavy: false !default;\n\n// If USWDS is generating your @font-face rules,\n// should we generate all available weights\n// regardless of the assignments above?\n\n$theme-generate-all-weights: false !default;\n\n/*\n----------------------------------------\nGeneral typography settings\n----------------------------------------\nType scale tokens\n----------------------------------------\nmicro:      10px\n1:          12px\n2:          13px\n3:          14px\n4:          15px\n5:          16px\n6:          17px\n7:          18px\n8:          20px\n9:          22px\n10:         24px\n11:         28px\n12:         32px\n13:         36px\n14:         40px\n15:         48px\n16:         56px\n17:         64px\n18:         80px\n19:         120px\n20:         140px\n----------------------------------------\nLine height tokens\n----------------------------------------\n1:    1\n2:    1.15\n3:    1.35\n4:    1.5\n5:    1.62\n6:    1.75\n----------------------------------------\nFont role tokens\n----------------------------------------\n'ui'\n'heading'\n'body'\n'code'\n'alt'\n----------------------------------------\nMeasure (max-width) tokens\n----------------------------------------\n1:       44ex\n2:       60ex\n3:       64ex\n4:       68ex\n5:       74ex\n6:       88ex\nnone:    none\n----------------------------------------\n*/\n\n// Body settings are the equivalent of setting the <body> element\n$theme-body-font-family: \"body\" !default;\n$theme-body-font-size: \"sm\" !default;\n$theme-body-line-height: 5 !default;\n\n// If true, explicitly style the <body> element with the base styles\n$theme-style-body-element: false !default;\n\n// Headings\n$theme-h1-font-size: \"2xl\" !default;\n$theme-h2-font-size: \"xl\" !default;\n$theme-h3-font-size: \"lg\" !default;\n$theme-h4-font-size: \"sm\" !default;\n$theme-h5-font-size: \"xs\" !default;\n$theme-h6-font-size: \"3xs\" !default;\n$theme-heading-line-height: 2 !default;\n$theme-small-font-size: \"2xs\" !default;\n$theme-display-font-size: \"3xl\" !default;\n\n// Text and prose\n$theme-text-measure-narrow: 1 !default;\n$theme-text-measure: 4 !default;\n$theme-text-measure-wide: 6 !default;\n$theme-prose-font-family: \"body\" !default;\n\n// Lead text\n$theme-lead-font-family: \"heading\" !default;\n$theme-lead-font-size: \"lg\" !default;\n$theme-lead-line-height: 6 !default;\n$theme-lead-measure: 6 !default;\n\n// Margin\n$theme-heading-margin-top: 1.5em !default;\n$theme-paragraph-margin-top: 1em !default;\n","/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nCOLOR SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS color tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens/color\n----------------------------------------\n*/\n\n$test-system-color-tokens: false !default;\n\n/*\n----------------------------------------\nTheme palette colors\n----------------------------------------\n*/\n\n// Base colors\n$theme-color-base-family: \"gray-cool\" !default;\n$theme-color-base-lightest: \"gray-5\" !default;\n$theme-color-base-lighter: \"gray-cool-10\" !default;\n$theme-color-base-light: \"gray-cool-30\" !default;\n$theme-color-base: \"gray-cool-50\" !default;\n$theme-color-base-dark: \"gray-cool-60\" !default;\n$theme-color-base-darker: \"gray-cool-70\" !default;\n$theme-color-base-darkest: \"gray-90\" !default;\n$theme-color-base-ink: \"gray-90\" !default;\n\n// Primary colors\n$theme-color-primary-family: \"blue\" !default;\n$theme-color-primary-lightest: false !default;\n$theme-color-primary-lighter: \"blue-10\" !default;\n$theme-color-primary-light: \"blue-30\" !default;\n$theme-color-primary: \"blue-60v\" !default;\n$theme-color-primary-vivid: \"blue-warm-60v\" !default;\n$theme-color-primary-dark: \"blue-warm-70v\" !default;\n$theme-color-primary-darker: \"blue-warm-80v\" !default;\n$theme-color-primary-darkest: false !default;\n\n// Secondary colors\n$theme-color-secondary-family: \"red\" !default;\n$theme-color-secondary-lightest: false !default;\n$theme-color-secondary-lighter: \"red-cool-10\" !default;\n$theme-color-secondary-light: \"red-30\" !default;\n$theme-color-secondary: \"red-50\" !default;\n$theme-color-secondary-vivid: \"red-cool-50v\" !default;\n$theme-color-secondary-dark: \"red-60v\" !default;\n$theme-color-secondary-darker: \"red-70v\" !default;\n$theme-color-secondary-darkest: false !default;\n\n// Accent warm colors\n$theme-color-accent-warm-family: \"orange\" !default;\n$theme-color-accent-warm-lightest: false !default;\n$theme-color-accent-warm-lighter: \"orange-10\" !default;\n$theme-color-accent-warm-light: \"orange-20v\" !default;\n$theme-color-accent-warm: \"orange-30v\" !default;\n$theme-color-accent-warm-dark: \"orange-50v\" !default;\n$theme-color-accent-warm-darker: \"orange-60\" !default;\n$theme-color-accent-warm-darkest: false !default;\n\n// Accent cool colors\n$theme-color-accent-cool-family: \"blue-cool\" !default;\n$theme-color-accent-cool-lightest: false !default;\n$theme-color-accent-cool-lighter: \"blue-cool-5v\" !default;\n$theme-color-accent-cool-light: \"blue-cool-20v\" !default;\n$theme-color-accent-cool: \"cyan-30v\" !default;\n$theme-color-accent-cool-dark: \"blue-cool-40v\" !default;\n$theme-color-accent-cool-darker: \"blue-cool-60v\" !default;\n$theme-color-accent-cool-darkest: false !default;\n\n/*\n----------------------------------------\nState palette colors\n----------------------------------------\n*/\n\n// Error colors\n$theme-color-error-family: \"red-warm\" !default;\n$theme-color-error-lighter: \"red-warm-10\" !default;\n$theme-color-error-light: \"red-warm-30v\" !default;\n$theme-color-error: \"red-warm-50v\" !default;\n$theme-color-error-dark: \"red-60v\" !default;\n$theme-color-error-darker: \"red-70\" !default;\n\n// Warning colors\n$theme-color-warning-family: \"gold\" !default;\n$theme-color-warning-lighter: \"yellow-5\" !default;\n$theme-color-warning-light: \"yellow-10v\" !default;\n$theme-color-warning: \"gold-20v\" !default;\n$theme-color-warning-dark: \"gold-30v\" !default;\n$theme-color-warning-darker: \"gold-50v\" !default;\n\n// Success colors\n$theme-color-success-family: \"green-cool\" !default;\n$theme-color-success-lighter: \"green-cool-5\" !default;\n$theme-color-success-light: \"green-cool-20v\" !default;\n$theme-color-success: \"green-cool-40v\" !default;\n$theme-color-success-dark: \"green-cool-50v\" !default;\n$theme-color-success-darker: \"green-cool-60v\" !default;\n\n// Info colors\n$theme-color-info-family: \"cyan\" !default;\n$theme-color-info-lighter: \"cyan-5\" !default;\n$theme-color-info-light: \"cyan-20\" !default;\n$theme-color-info: \"cyan-30v\" !default;\n$theme-color-info-dark: \"cyan-40v\" !default;\n$theme-color-info-darker: \"blue-cool-60\" !default;\n\n// Disabled colors\n$theme-color-disabled-family: \"gray\" !default;\n$theme-color-disabled-light: \"gray-10\" !default;\n$theme-color-disabled: \"gray-20\" !default;\n$theme-color-disabled-dark: \"gray-30\" !default;\n$theme-color-disabled-text: \"gray-50\";\n$theme-color-disabled-text-reverse: \"gray-40\";\n$theme-color-text-on-disabled: \"gray-70\";\n\n// Emergency colors\n$theme-color-emergency: \"red-warm-60v\" !default;\n$theme-color-emergency-dark: \"red-warm-80\" !default;\n\n/*\n----------------------------------------\nGeneral colors\n----------------------------------------\n*/\n\n// Body\n$theme-body-background-color: \"white\" !default;\n\n// Text\n$theme-text-color: \"ink\" !default;\n$theme-text-reverse-color: \"white\" !default;\n\n// Links\n$theme-link-color: \"primary\" !default;\n$theme-link-visited-color: \"violet-70v\" !default;\n$theme-link-hover-color: \"primary-dark\" !default;\n$theme-link-active-color: \"primary-darker\" !default;\n$theme-link-reverse-color: \"base-lighter\" !default;\n$theme-link-reverse-hover-color: \"base-lightest\" !default;\n$theme-link-reverse-active-color: \"white\" !default;\n","@use \"settings-general\" as general;\n\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nCOMPONENT SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS style tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens\n----------------------------------------\n*/\n\n// Accordion\n$theme-accordion-background-color: \"default\" !default;\n$theme-accordion-border-color: \"base-lightest\" !default;\n$theme-accordion-border-width: 0.5 !default;\n$theme-accordion-button-background-color: \"base-lightest\" !default;\n$theme-accordion-font-family: \"body\" !default;\n\n// Alert\n$theme-alert-bar-width: 1 !default;\n$theme-alert-font-family: \"ui\" !default;\n$theme-alert-icon-size: 4 !default;\n$theme-alert-padding-x: 2.5 !default;\n$theme-alert-padding-y: 2 !default;\n$theme-alert-text-color: default !default;\n$theme-alert-text-reverse-color: default !default;\n$theme-alert-link-color: default !default;\n$theme-alert-link-reverse-color: default !default;\n\n// Banner\n$theme-banner-background-color: \"base-lightest\" !default;\n$theme-banner-font-family: \"ui\" !default;\n$theme-banner-link-color: default !default;\n$theme-banner-max-width: \"desktop\" !default;\n\n// Breadcrumb\n$theme-breadcrumb-background-color: \"default\" !default;\n$theme-breadcrumb-font-size: \"sm\" !default;\n$theme-breadcrumb-font-family: \"body\" !default;\n$theme-breadcrumb-link-color: default !default;\n$theme-breadcrumb-min-width: \"mobile-lg\" !default;\n$theme-breadcrumb-padding-bottom: 2 !default;\n$theme-breadcrumb-padding-top: 2 !default;\n$theme-breadcrumb-padding-x: 0 !default;\n$theme-breadcrumb-separator-color: \"base\" !default;\n\n// Button\n$theme-button-font-family: \"ui\" !default;\n$theme-button-border-radius: \"md\" !default;\n$theme-button-small-width: 6 !default;\n$theme-button-stroke-width: 2px !default;\n\n// Card\n$theme-card-border-color: \"base-lighter\" !default;\n$theme-card-border-radius: \"lg\" !default;\n$theme-card-border-width: 2px !default;\n$theme-card-gap: 2 !default;\n$theme-card-flag-min-width: \"tablet\" !default;\n$theme-card-flag-image-width: \"card-lg\" !default;\n$theme-card-font-family: \"body\" !default;\n$theme-card-header-typeset: \"heading\", \"lg\", 2 !default;\n$theme-card-margin-bottom: 4 !default;\n$theme-card-padding-perimeter: 3 !default;\n$theme-card-padding-y: 2 !default;\n\n// Collection\n$theme-collection-font-family: \"ui\" !default;\n$theme-collection-header-typeset: \"ui\", \"md\", 3 !default;\n\n// Footer\n$theme-footer-font-family: \"body\" !default;\n$theme-footer-max-width: \"desktop\" !default;\n\n// Form and input\n$theme-checkbox-border-radius: \"sm\" !default;\n$theme-form-font-family: \"ui\" !default;\n$theme-input-background-color: default !default;\n$theme-input-line-height: 3 !default;\n$theme-input-max-width: \"mobile-lg\" !default;\n$theme-input-select-border-width: 2px !default;\n$theme-input-select-size: 2.5 !default;\n$theme-input-state-border-width: 0.5 !default;\n$theme-input-tile-border-radius: \"md\" !default;\n$theme-input-tile-border-width: 2px !default;\n\n// Header\n$theme-header-font-family: \"ui\" !default;\n$theme-header-logo-text-width: 33% !default;\n$theme-header-max-width: \"desktop\" !default;\n$theme-header-min-width: \"desktop\" !default;\n\n// Hero\n$theme-hero-image: \"#{general.$theme-image-path}/hero.jpg\" !default;\n\n// Icon List\n$theme-icon-list-font-family: \"body\" !default;\n$theme-icon-list-title-font-family: \"heading\" !default;\n\n// Identifier\n$theme-identifier-background-color: \"base-darkest\" !default;\n$theme-identifier-font-family: \"ui\" !default;\n$theme-identifier-identity-domain-color: \"base-light\" !default;\n$theme-identifier-max-width: \"desktop\" !default;\n$theme-identifier-primary-link-color: default !default;\n$theme-identifier-secondary-link-color: \"base-light\" !default;\n\n// In-Page Navigation\n$theme-in-page-nav-background-color: \"default\" !default;\n$theme-in-page-nav-background-padding: 2 !default;\n$theme-in-page-nav-background-radius: \"lg\" !default;\n$theme-in-page-nav-bar-color: \"default\" !default;\n$theme-in-page-nav-bar-width: \"05\" !default;\n$theme-in-page-nav-font-family: \"ui\" !default;\n$theme-in-page-nav-link-color: \"default\" !default;\n$theme-in-page-nav-main-content-max-width: \"desktop\" !default;\n$theme-in-page-nav-margin-left: 4 !default;\n$theme-in-page-nav-margin-top: 2.5 !default;\n$theme-in-page-nav-top: 4 !default;\n\n// Link\n$theme-external-link-sr-label-tab-new: \"External, opens in a new tab.\" !default;\n$theme-external-link-sr-label-tab-same: \"External.\" !default;\n\n// Modal\n$theme-modal-border-radius: \"lg\" !default;\n$theme-modal-default-max-width: \"mobile-lg\" !default;\n$theme-modal-lg-content-max-width: \"tablet\" !default;\n$theme-modal-lg-max-width: \"tablet-lg\" !default;\n\n// Pagination\n$theme-pagination-background-color: \"default\" !default;\n$theme-pagination-breakpoint: \"tablet\" !default;\n$theme-pagination-button-border-radius: \"md\" !default;\n$theme-pagination-button-border-width: 1px !default;\n$theme-pagination-font-family: \"ui\" !default;\n\n// Process List\n$theme-process-list-counter-background-color: \"white\" !default;\n$theme-process-list-counter-border-color: \"ink\" !default;\n$theme-process-list-counter-border-width: 0.5 !default;\n$theme-process-list-counter-font-family: \"ui\" !default;\n$theme-process-list-counter-font-size: \"lg\" !default;\n$theme-process-list-counter-gap-color: \"white\" !default;\n$theme-process-list-counter-gap-width: 0.5 !default;\n$theme-process-list-counter-size: 5 !default;\n$theme-process-list-counter-text-color: \"ink\" !default;\n$theme-process-list-connector-color: \"primary-lighter\" !default;\n$theme-process-list-connector-width: 1 !default;\n$theme-process-list-font-family: \"ui\" !default;\n$theme-process-list-font-size: \"sm\" !default;\n$theme-process-list-heading-color: \"ink\" !default;\n$theme-process-list-heading-font-family: \"ui\" !default;\n$theme-process-list-heading-font-size: \"lg\" !default;\n\n// Navigation\n$theme-navigation-font-family: \"ui\" !default;\n$theme-megamenu-columns: 3 !default;\n\n// Search\n$theme-search-font-family: \"ui\" !default;\n$theme-search-min-width: 27ch !default;\n\n// Sidenav\n$theme-sidenav-current-border-width: 0.5 !default;\n$theme-sidenav-font-family: \"ui\" !default;\n\n// Site Alert\n$theme-site-alert-max-width: \"desktop\" !default;\n\n// Step indicator\n$step-indicator-background-color: \"white\" !default;\n$theme-step-indicator-counter-gap: 0.5 !default;\n$theme-step-indicator-counter-border-width: 0.5 !default;\n$theme-step-indicator-font-family: \"ui\" !default;\n$theme-step-indicator-heading-color: \"ink\" !default;\n$theme-step-indicator-heading-font-family: \"ui\" !default;\n$theme-step-indicator-heading-font-size: \"lg\" !default;\n$theme-step-indicator-heading-font-size-small: \"md\" !default;\n$theme-step-indicator-label-font-size: \"sm\" !default;\n$theme-step-indicator-min-width: \"tablet\" !default;\n$theme-step-indicator-segment-color-pending: \"gray-40\" !default;\n$theme-step-indicator-segment-color-complete: \"primary-darker\" !default;\n$theme-step-indicator-segment-color-current: \"primary\" !default;\n$theme-step-indicator-segment-gap: 2px !default;\n$theme-step-indicator-segment-height: 1 !default;\n$theme-step-indicator-text-pending-color: \"base-dark\" !default;\n\n// Summary box\n$theme-summary-box-background-color: \"info-lighter\" !default;\n$theme-summary-box-border-color: \"info-light\" !default;\n$theme-summary-box-border-width: 1px !default;\n$theme-summary-box-border-radius: \"md\" !default;\n$theme-summary-box-font-family: \"ui\" !default;\n$theme-summary-box-link-color: default !default;\n$theme-summary-box-text-color: default !default;\n\n// Table\n$theme-table-border-color: \"ink\" !default;\n$theme-table-header-background-color: \"base-lighter\" !default;\n$theme-table-header-text-color: default !default;\n$theme-table-stripe-background-color: \"base-lightest\" !default;\n$theme-table-stripe-text-color: default !default;\n$theme-table-text-color: default !default;\n$theme-table-sorted-header-background-color: \"accent-cool-light\" !default;\n$theme-table-sorted-background-color: \"accent-cool-lighter\" !default;\n$theme-table-sorted-stripe-background-color: \"blue-cool-10v\" !default;\n$theme-table-sorted-icon-color: default !default;\n$theme-table-unsorted-icon-color: \"base\" !default;\n\n// Tooltips\n$theme-tooltip-background-color: \"ink\" !default;\n$theme-tooltip-font-color: \"base-lightest\" !default;\n$theme-tooltip-font-size: \"xs\" !default;\n","/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nSPACING SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS spacing units tokens in the\ndocumentation:\nhttps://designsystem.digital.gov/design-tokens/spacing-units\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nBorder radius\n----------------------------------------\n2px           2px\n0.5           4px\n1             8px\n1.5           12px\n2             16px\n2.5           20px\n3             24px\n4             32px\n5             40px\n6             48px\n7             56px\n8             64px\n9             72px\n----------------------------------------\n*/\n\n$theme-border-radius-sm: 2px !default;\n$theme-border-radius-md: 0.5 !default;\n$theme-border-radius-lg: 1 !default;\n\n/*\n----------------------------------------\nColumn gap\n----------------------------------------\n2px         2px\n0.5         4px\n1           8px\n2           16px\n3           24px\n4           32px\n5           40px\n6           48px\n----------------------------------------\n*/\n\n$theme-column-gap-sm: 2px !default;\n$theme-column-gap-md: 2 !default;\n$theme-column-gap-lg: 3 !default;\n\n// These determine the responsive gap sizes set with .grid-gap\n$theme-column-gap-mobile: 2 !default;\n$theme-column-gap-desktop: 4 !default;\n\n/*\n----------------------------------------\nGrid container max-width\n----------------------------------------\nmobile\nmobile-lg\ntablet\ntablet-lg\ndesktop\ndesktop-lg\nwidescreen\n----------------------------------------\n*/\n\n$theme-grid-container-max-width: \"desktop\" !default;\n\n/*\n----------------------------------------\nSite\n----------------------------------------\n*/\n\n$theme-site-margins-breakpoint: \"desktop\" !default;\n$theme-site-margins-width: 4 !default;\n$theme-site-margins-mobile-width: 2 !default;\n","/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nUTILITIES SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS utilities in the documentation:\nhttps://designsystem.digital.gov/utilities\n----------------------------------------\n*/\n\n@use \"sass:map\";\n\n$utilities-use-important: false !default;\n$output-these-utilities: default !default;\n\n/*\n----------------------------------------\nUtility breakpoints\n----------------------------------------\nWhich breakpoints does your project\nneed? Select as `true` any breakpoint\nused by utilities or layout grid\n----------------------------------------\n*/\n\n$theme-utility-breakpoints: () !default;\n$theme-utility-breakpoints-complete: map.merge(\n  (\n    // 160px:\n    \"card\": false,\n    // 240px:\n    \"card-lg\": false,\n    // 320px:\n    \"mobile\": false,\n    // 480px:\n    \"mobile-lg\": true,\n    // 640px:\n    \"tablet\": true,\n    // 880px:\n    \"tablet-lg\": false,\n    // 1024px:\n    \"desktop\": true,\n    // 1200px:\n    \"desktop-lg\": false,\n    // 1400px:\n    \"widescreen\": false\n  ),\n  $theme-utility-breakpoints\n) !default;\n\n/*\n----------------------------------------\nGlobal colors\n----------------------------------------\nThe following palettes will be added to\n- background-color\n- border-color\n- color\n- text-decoration-color\n----------------------------------------\n*/\n\n$global-color-palettes: (\"palette-color-default\") !default;\n\n/*\n----------------------------------------\nSettings\n----------------------------------------\n*/\n\n$add-aspect-settings: () !default;\n$add-aspect-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $add-aspect-settings\n) !default;\n\n$add-list-reset-settings: () !default;\n$add-list-reset-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $add-list-reset-settings\n) !default;\n\n$align-items-settings: () !default;\n$align-items-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $align-items-settings\n) !default;\n\n$align-self-settings: () !default;\n$align-self-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $align-self-settings\n) !default;\n\n$background-color-settings: () !default;\n$background-color-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $background-color-settings\n) !default;\n\n$border-settings: () !default;\n$border-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $border-settings\n) !default;\n\n$border-color-settings: () !default;\n$border-color-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $border-color-settings\n) !default;\n\n$border-radius-settings: () !default;\n$border-radius-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $border-radius-settings\n) !default;\n\n$border-style-settings: () !default;\n$border-style-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $border-style-settings\n) !default;\n\n$border-width-settings: () !default;\n$border-width-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $border-width-settings\n) !default;\n\n$bottom-settings: () !default;\n$bottom-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $bottom-settings\n) !default;\n\n$box-shadow-settings: () !default;\n$box-shadow-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $box-shadow-settings\n) !default;\n\n$circle-settings: () !default;\n$circle-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $circle-settings\n) !default;\n\n$clearfix-settings: () !default;\n$clearfix-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $clearfix-settings\n) !default;\n\n$color-settings: () !default;\n$color-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $color-settings\n) !default;\n\n$cursor-settings: () !default;\n$cursor-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $cursor-settings\n) !default;\n\n$display-settings: () !default;\n$display-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $display-settings\n) !default;\n\n$flex-settings: () !default;\n$flex-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $flex-settings\n) !default;\n\n$flex-direction-settings: () !default;\n$flex-direction-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $flex-direction-settings\n) !default;\n\n$flex-wrap-settings: () !default;\n$flex-wrap-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $flex-wrap-settings\n) !default;\n\n$float-settings: () !default;\n$float-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $float-settings\n) !default;\n\n$font-settings: () !default;\n$font-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $font-settings\n) !default;\n\n$font-family-settings: () !default;\n$font-family-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $font-family-settings\n) !default;\n\n$font-feature-settings: () !default;\n$font-feature-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $font-feature-settings\n) !default;\n\n$font-style-settings: () !default;\n$font-style-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $font-style-settings\n) !default;\n\n$font-weight-settings: () !default;\n$font-weight-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $font-weight-settings\n) !default;\n\n$height-settings: () !default;\n$height-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $height-settings\n) !default;\n\n$justify-content-settings: () !default;\n$justify-content-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $justify-content-settings\n) !default;\n\n$left-settings: () !default;\n$left-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $left-settings\n) !default;\n\n$letter-spacing-settings: () !default;\n$letter-spacing-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $letter-spacing-settings\n) !default;\n\n$line-height-settings: () !default;\n$line-height-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $line-height-settings\n) !default;\n\n$margin-settings: () !default;\n$margin-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $margin-settings\n) !default;\n\n$max-height-settings: () !default;\n$max-height-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $max-height-settings\n) !default;\n\n$max-width-settings: () !default;\n$max-width-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $max-width-settings\n) !default;\n\n$measure-settings: () !default;\n$measure-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $measure-settings\n) !default;\n\n$min-height-settings: () !default;\n$min-height-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $min-height-settings\n) !default;\n\n$min-width-settings: () !default;\n$min-width-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $min-width-settings\n) !default;\n\n$opacity-settings: () !default;\n$opacity-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $opacity-settings\n) !default;\n\n$order-settings: () !default;\n$order-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $order-settings\n) !default;\n\n$outline-settings: () !default;\n$outline-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $outline-settings\n) !default;\n\n$outline-color-settings: () !default;\n$outline-color-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $outline-color-settings\n) !default;\n\n$overflow-settings: () !default;\n$overflow-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $overflow-settings\n) !default;\n\n$padding-settings: () !default;\n$padding-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $padding-settings\n) !default;\n\n$pin-settings: () !default;\n$pin-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $pin-settings\n) !default;\n\n$position-settings: () !default;\n$position-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $position-settings\n) !default;\n\n$right-settings: () !default;\n$right-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $right-settings\n) !default;\n\n$square-settings: () !default;\n$square-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $square-settings\n) !default;\n\n$text-align-settings: () !default;\n$text-align-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $text-align-settings\n) !default;\n\n$text-decoration-settings: () !default;\n$text-decoration-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $text-decoration-settings\n) !default;\n\n$text-decoration-color-settings: () !default;\n$text-decoration-color-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: true,\n    visited: false,\n  ),\n  $text-decoration-color-settings\n) !default;\n\n$text-indent-settings: () !default;\n$text-indent-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $text-indent-settings\n) !default;\n\n$text-transform-settings: () !default;\n$text-transform-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $text-transform-settings\n) !default;\n\n$top-settings: () !default;\n$top-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $top-settings\n) !default;\n\n$vertical-align-settings: () !default;\n$vertical-align-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $vertical-align-settings\n) !default;\n\n$whitespace-settings: () !default;\n$whitespace-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $whitespace-settings\n) !default;\n\n$width-settings: () !default;\n$width-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: true,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $width-settings\n) !default;\n\n$z-index-settings: () !default;\n$z-index-settings-complete: map.merge(\n  (\n    output: true,\n    responsive: false,\n    active: false,\n    focus: false,\n    hover: false,\n    visited: false,\n  ),\n  $z-index-settings\n) !default;\n\n/*\n----------------------------------------\nValues\n----------------------------------------\n*/\n\n// .add-aspect\n\n$add-aspect-palettes: () !default;\n$add-aspect-manual-values: () !default;\n\n// .align-items\n\n$align-items-palettes: (\"palette-align-items-default\") !default;\n$align-items-manual-values: () !default;\n\n// .align-self\n\n$align-self-palettes: (\"palette-align-self-default\") !default;\n$align-self-manual-values: () !default;\n\n// .background-color\n\n$background-color-palettes: () !default;\n$background-color-manual-values: () !default;\n\n// .border\n\n$border-palettes: (\"palette-border-default\") !default;\n$border-manual-values: () !default;\n\n// .border-color\n\n$border-color-palettes: () !default;\n$border-color-manual-values: () !default;\n\n// .border-radius\n\n$border-radius-palettes: (\"palette-border-radius-default\") !default;\n$border-radius-manual-values: () !default;\n\n// .border-style\n\n$border-style-palettes: (\"palette-border-style-default\") !default;\n$border-style-manual-values: () !default;\n\n// .border-width\n\n$border-width-palettes: (\"palette-border-width-default\") !default;\n$border-width-manual-values: () !default;\n\n// .bottom\n\n$bottom-palettes: (\"palette-bottom-default\") !default;\n\n$bottom-manual-values: () !default;\n\n// .box-shadow\n\n$box-shadow-palettes: (\"palette-box-shadow-default\") !default;\n\n$box-shadow-manual-values: () !default;\n\n// .circle\n\n$circle-palettes: (\"palette-circle-default\") !default;\n$circle-manual-values: () !default;\n\n// .color\n\n$color-palettes: () !default;\n$color-manual-values: () !default;\n\n// .cursor\n\n$cursor-palettes: (\"palette-cursor-default\") !default;\n$cursor-manual-values: () !default;\n\n// .display\n\n$display-palettes: (\"palette-display-default\") !default;\n$display-manual-values: () !default;\n\n// .flex\n\n$flex-palettes: (\"palette-flex-default\") !default;\n$flex-manual-values: () !default;\n\n// .flex-direction\n\n$flex-direction-palettes: (\"palette-flex-direction-default\") !default;\n$flex-direction-manual-values: () !default;\n\n// .flex-wrap\n\n$flex-wrap-palettes: (\"palette-flex-wrap-default\") !default;\n$flex-wrap-manual-values: () !default;\n\n// .float\n\n$float-palettes: (\"palette-float-default\") !default;\n$float-manual-values: () !default;\n\n// .font\n\n$font-palettes: (\"palette-font-default\") !default;\n$font-manual-values: () !default;\n\n// .font-family\n\n$font-family-palettes: (\"palette-font-family-default\") !default;\n$font-family-manual-values: () !default;\n\n// .font-feature-settings\n\n$font-feature-palettes: (\"palette-font-feature-settings-default\") !default;\n$font-feature-manual-values: () !default;\n\n// .font-style\n\n$font-style-palettes: (\"palette-font-style-default\") !default;\n$font-style-manual-values: () !default;\n\n// .font-weight\n\n$font-weight-palettes: (\"palette-font-weight-default\") !default;\n$font-weight-manual-values: () !default;\n\n// .height\n\n$height-palettes: (\"palette-height-default\") !default;\n$height-manual-values: () !default;\n\n// .justify-content\n\n$justify-content-palettes: (\"palette-justify-content-default\") !default;\n$justify-content-manual-values: () !default;\n\n// .left\n\n$left-palettes: (\"palette-left-default\") !default;\n$left-manual-values: () !default;\n\n// .letter-spacing\n\n$letter-spacing-palettes: (\"palette-letter-spacing-default\") !default;\n$letter-spacing-manual-values: () !default;\n\n// .line-height\n\n$line-height-palettes: (\"palette-line-height-default\") !default;\n$line-height-manual-values: () !default;\n\n// .margin\n\n$margin-palettes: (\"palette-margin-default\") !default;\n$margin-manual-values: () !default;\n$margin-vertical-palettes: (\"palette-margin-vertical-default\") !default;\n$margin-vertical-manual-values: () !default;\n$margin-horizontal-palettes: (\"palette-margin-horizontal-default\") !default;\n$margin-horizontal-manual-values: () !default;\n\n// .max-height\n\n$max-height-palettes: (\"palette-max-height-default\") !default;\n$max-height-manual-values: () !default;\n\n// .max-width\n\n$max-width-palettes: (\"palette-max-width-default\") !default;\n$max-width-manual-values: () !default;\n\n// .measure\n\n$measure-palettes: (\"palette-measure-default\") !default;\n$measure-manual-values: () !default;\n\n// .min-height\n\n$min-height-palettes: (\"palette-min-height-default\") !default;\n$min-height-manual-values: () !default;\n\n// .min-width\n\n$min-width-palettes: (\"palette-min-width-default\") !default;\n$min-width-manual-values: () !default;\n\n// .opacity\n\n$opacity-palettes: (\"palette-opacity-default\") !default;\n$opacity-manual-values: () !default;\n\n// .order\n\n$order-palettes: (\"palette-order-default\") !default;\n$order-manual-values: () !default;\n\n// .outline\n\n$outline-palettes: (\"palette-outline-default\") !default;\n$outline-manual-values: () !default;\n\n// .outline-color\n\n$outline-color-palettes: (\"palette-outline-color-default\") !default;\n$outline-color-manual-values: () !default;\n\n// .overflow\n\n$overflow-palettes: (\"palette-overflow-default\") !default;\n$overflow-manual-values: () !default;\n\n// .padding\n\n$padding-palettes: (\"palette-padding-default\") !default;\n$padding-manual-values: () !default;\n\n// .position\n\n$position-palettes: (\"palette-position-default\") !default;\n$position-manual-values: () !default;\n\n// .right\n\n$right-palettes: (\"palette-right-default\") !default;\n$right-manual-values: () !default;\n\n// .square\n\n$square-palettes: (\"palette-square-default\") !default;\n$square-manual-values: () !default;\n\n// .text-align\n\n$text-align-palettes: (\"palette-text-align-default\") !default;\n$text-align-manual-values: () !default;\n\n// .text-decoration\n\n$text-decoration-palettes: (\"palette-text-decoration-default\") !default;\n$text-decoration-manual-values: () !default;\n\n// .text-decoration-color\n\n$text-decoration-color-palettes: () !default;\n$text-decoration-color-manual-values: () !default;\n\n// .text-indent\n\n$text-indent-palettes: (\"palette-text-indent-default\") !default;\n$text-indent-manual-values: () !default;\n\n// .text-transform\n\n$text-transform-palettes: (\"palette-text-transform-default\") !default;\n$text-transform-manual-values: () !default;\n\n// .top\n\n$top-palettes: (\"palette-top-default\") !default;\n$top-manual-values: () !default;\n\n// .vertical-align\n\n$vertical-align-palettes: (\"palette-vertical-align-default\") !default;\n$vertical-align-manual-values: () !default;\n\n// .white-space\n\n$whitespace-palettes: (\"palette-white-space-default\") !default;\n$whitespace-manual-values: () !default;\n\n// .width\n\n$width-palettes: (\"palette-width-default\") !default;\n$width-manual-values: () !default;\n\n// .z-index\n\n$z-index-palettes: (\"palette-z-index-default\") !default;\n$z-index-manual-values: () !default;\n","/*\n----------------------------------------\nget-last()\n----------------------------------------\nReturn the last item of a list,\nReturn null if the value is null\n----------------------------------------\n*/\n\n@use \"sass:list\";\n\n@function get-last($props) {\n  $length: list.length($props);\n  $last: if($length == 0, null, list.nth($props, -1));\n\n  @return $last;\n}\n\n// @debug get-last((1, 2, 3));\n// @return 3;\n","/*\n----------------------------------------\nappend-important()\n----------------------------------------\nAppend `!important` to a list\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"get-last\" as *;\n\n@function append-important($source, $destination) {\n  @if get-last($source) == \"!important\" {\n    @return list.append($destination, !important, comma);\n  }\n\n  @return $destination;\n}\n\n// @debug append-important((1, 2, !important), (3, 4));\n// @return 3, 4, !important\n","/*\n----------------------------------------\nde-list()\n----------------------------------------\nTransform a one-element list or arglist\ninto that single element.\n----------------------------------------\n(1) => 1\n((1)) => (1)\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"sass:meta\";\n\n@function de-list($value) {\n  $types: (\"list\", \"arglist\");\n\n  @if not list.index($types, meta.type-of($value)) {\n    @return $value;\n  }\n\n  $output: if(list.length($value) == 1, list.nth($value, 1), $value);\n\n  @return $output;\n}\n\n// @debug de-list((1));\n// @return 1;\n","/*\n----------------------------------------\nuswds-error()\n----------------------------------------\nAllow the system to pass an error as text\nto test error states in unit testing\n----------------------------------------\n*/\n\n$error-output-override: false !default;\n@function uswds-error($message, $override: $error-output-override) {\n  @if $override {\n    @return \"Error: #{$message}\";\n  }\n\n  @error \"#{$message}\";\n}\n","/*\n----------------------------------------\nerror-not-token()\n----------------------------------------\nReturns a common not-a-token error.\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"error\" as *;\n\n@function error-not-token($token, $type, $valid-token-map: false) {\n  $valid-token-message: if(\n    $valid-token-map,\n    \" Valid tokens: #{map.keys($valid-token-map)}\",\n    \"\"\n  );\n  @return uswds-error(\n    \"'#{$token}' is not a valid USWDS #{$type} token. #{$valid-token-message}\"\n  );\n}\n","/*\n----------------------------------------\nget-default()\n----------------------------------------\nReturns the default value from a map\nof project defaults\nget-default(\"bg-color\")\n> $theme-body-background-color\n----------------------------------------\n*/\n\n@use \"sass:map\";\n\n@use \"../../variables/project-defaults\" as *;\n\n@function get-default($var) {\n  $value: map.get($project-defaults, $var);\n  @return $value;\n}\n","/*\n----------------------------------------\nhas-important()\n----------------------------------------\nCheck to see if `!important` is\nbeing passed in a mixin's props\n----------------------------------------\n*/\n@use \"de-list\" as *;\n@use \"get-last\" as *;\n\n@function has-important($props) {\n  $props: de-list($props);\n\n  @if get-last($props) == \"!important\" {\n    @return true;\n  }\n\n  @return false;\n}\n\n// @debug has-important((foo, \"!important\"));\n// @return true\n","/*\n----------------------------------------\nmap-collect()\n----------------------------------------\nCollect multiple maps into a single\nlarge map\nsource: https://gist.github.com/bigglesrocks/d75091700f8f2be5abfe\n----------------------------------------\n*/\n\n@use \"sass:map\";\n\n@function map-collect($maps...) {\n  $collection: ();\n\n  @each $map in $maps {\n    $collection: map.merge($collection, $map);\n  }\n\n  @return $collection;\n}\n\n// @debug map-collect(\n//   (\n//     \"foo\": bar,\n//   ),\n//   (\n//     \"baz\": qux,\n//   )\n// );\n","/*\n----------------------------------------\nmap-deep-get()\n----------------------------------------\n@author Hugo Giraudel\n@access public\n@param {Map} $map - Map\n@param {Arglist} $keys - Key chain\n@return {*} - Desired value\n----------------------------------------\n*/\n@use \"sass:map\";\n\n@function map-deep-get($map, $keys...) {\n  @each $key in $keys {\n    $map: map.get($map, $key);\n  }\n\n  @return $map;\n}\n\n// @debug map-deep-get(\n//   (\n//     \"foo\": (\n//       \"bar\": baz\n//     )\n//   ),\n//   foo,\n//   bar\n// );\n","/*\n----------------------------------------\nmulti-cat()\n----------------------------------------\nConcatenate two lists\n----------------------------------------\n*/\n@use \"sass:list\";\n\n@function multi-cat($list1, $list2) {\n  $this-list: ();\n\n  @each $e in $list1 {\n    @each $ee in $list2 {\n      $this-block: $e + $ee;\n      $this-list: list.join($this-list, $this-block);\n    }\n  }\n\n  @return $this-list;\n}\n\n// @debug multi-cat((1, 2), (a, b));\n// 1a, 1b, 2a, 2b\n","/*\n----------------------------------------\nremove()\n----------------------------------------\nRemove a value from a list\n----------------------------------------\n*/\n@use \"sass:list\";\n@use \"sass:meta\";\n\n@function remove($list, $value, $recursive: false) {\n  $result: ();\n\n  @for $i from 1 through list.length($list) {\n    @if meta.type-of(list.nth($list, $i)) == list and $recursive {\n      $result: list.append(\n        $result,\n        remove(list.nth($list, $i), $value, $recursive)\n      );\n    } @else if list.nth($list, $i) != $value {\n      $result: list.append($result, list.nth($list, $i));\n    }\n  }\n\n  @return $result;\n}\n\n// @debug remove((1, 2, 3), 2);\n// @return 1, 3\n","/*\n----------------------------------------\nsmart-quote()\n----------------------------------------\nQuotes strings\nInspects `px`, `xs`, and `xl` numbers\nLeaves bools as is\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"sass:meta\";\n@use \"sass:math\";\n@use \"sass:string\";\n\n@function smart-quote($value) {\n  @if meta.type-of($value) == \"string\" {\n    @return string.quote($value);\n  }\n\n  @if meta.type-of($value) ==\n    \"number\" and\n    list.index((\"px\", \"xl\", \"xs\"), math.unit($value))\n  {\n    @return meta.inspect($value);\n  }\n\n  @if meta.type-of($value) == \"color\" {\n    @error 'Only use quoted color tokens in USWDS functions and mixins. '\n      + 'See designsystem.digital.gov/design-tokens/color '\n      + 'for more information.';\n  }\n\n  @return $value;\n}\n\n// @debug smart-quote(foo);\n// @return foo;\n// @debug smart-quote(\"3xs\");\n// @debug 3xs;\n","@use \"sass:string\";\n\n/*\n----------------------------------------\nstr-replace()\n----------------------------------------\nReplace any substring with another\nstring\n----------------------------------------\n*/\n\n@function str-replace($string, $search, $replace: \"\") {\n  $index: string.index($string, $search);\n\n  @if $index {\n    @return string.slice($string, 1, $index - 1) + $replace +\n      str-replace(\n        string.slice($string, $index + string.length($search)),\n        $search,\n        $replace\n      );\n  }\n\n  @return $string;\n}\n\n// @debug str-replace(\"Batman\", \"man\");\n// @return Bat;\n","@use \"sass:list\";\n@use \"sass:string\";\n\n/*\n----------------------------------------\nstr-split()\n----------------------------------------\nSplit a string at a given separator\nand convert into a list of substrings\n----------------------------------------\n*/\n\n@function str-split($string, $separator) {\n  $split-arr: ();\n  $index: string.index($string, $separator);\n  @while $index != null {\n    $item: string.slice($string, 1, $index - 1);\n    $split-arr: list.append($split-arr, $item);\n    $string: string.slice($string, $index + 1);\n    $index: string.index($string, $separator);\n  }\n  $split-arr: list.append($split-arr, $string);\n\n  @return $split-arr;\n}\n\n// @debug str-split(\"1, 2, 3, 4, 5\", \",\");\n// @return \"1\" \" 2\" \" 3\" \" 4\" \" 5\";\n","/*\n----------------------------------------\nstrip-unit()\n----------------------------------------\nRemove the unit of a length\n@author Hugo Giraudel\n@param {Number} $number - Number to remove unit from\n@return {Number} - Unitless number\n----------------------------------------\n*/\n\n@use \"sass:meta\";\n@use \"sass:math\";\n\n@function strip-unit($number) {\n  @if meta.type-of($number) == \"number\" and not math.is-unitless($number) {\n    @return math.div($number, ($number * 0 + 1));\n  }\n\n  @return $number;\n}\n\n// @debug strip-unit(10px);\n// @return 10;\n","/*\n----------------------------------------\nbase-to-map()\n@TODO: Deprecate and delete\n----------------------------------------\nConvert a single base to a USWDS\nvalue map.\n\nCandidate for deprecation if we remove\nisReadable\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"remove\" as *;\n\n@function base-to-map($values) {\n  $l: list.length($values);\n\n  @if $l == 1 or list.nth($values, $l) != isReadable {\n    @return (slug: $values, isReadable: true);\n  } @else {\n    $values: remove($values, isReadable);\n\n    @return (slug: unquote(list.nth($values, 1)), isReadable: true);\n  }\n}\n\n@function to-map($key, $values) {\n  $l: list.length($values);\n\n  @if $key == \"noModifier\" or $key == \"noValue\" {\n    $key: \"\";\n  }\n\n  @return (slug: $key, content: $values);\n}\n","/*\n----------------------------------------\nto-number()\n----------------------------------------\nCasts a string into a number\n----------------------------------------\n@param {String | Number} $value - Value to be parsed\n@return {Number}\n----------------------------------------\n*/\n\n@use \"sass:meta\";\n@use \"sass:map\";\n@use \"sass:string\";\n@use \"sass:list\";\n\n@function to-number($value) {\n  @if meta.type-of($value) == \"number\" {\n    @return $value;\n  } @else if meta.type-of($value) != \"string\" {\n    @warn \"Value for `to-number` should be a number or a string.\";\n  }\n\n  $result: 0;\n  $digits: 0;\n  $minus: string.slice($value, 1, 1) == \"-\";\n  $numbers: (\n    \"0\": 0,\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n    \"5\": 5,\n    \"6\": 6,\n    \"7\": 7,\n    \"8\": 8,\n    \"9\": 9,\n  );\n\n  @for $i from if($minus, 2, 1) through string.length($value) {\n    $character: string.slice($value, $i, $i);\n\n    @if not(list.index(map.keys($numbers), $character) or $character == \".\") {\n      @return to-length(\n        if($minus, -$result, $result),\n        string.slice($value, $i)\n      );\n    }\n\n    @if $character == \".\" {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map.get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map.get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n","/*\n----------------------------------------\nunpack()\n----------------------------------------\nCreate lists of single items from lists\nof lists.\n----------------------------------------\n(1, (2.1, 2.2), 3) -->\n(1, 2.1, 2.2, 3)\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"sass:meta\";\n@use \"de-list\" as *;\n\n@function unpack($value) {\n  $output: ();\n\n  @if list.length($value) == 0 {\n    @return $value;\n  }\n\n  @each $i in $value {\n    @if meta.type-of($i) == \"list\" {\n      @each $ii in $i {\n        $output: list.append($output, $ii, comma);\n      }\n    } @else {\n      $output: list.append($output, $i, comma);\n    }\n  }\n\n  @return de-list($output);\n}\n\n// @debug unpack((1, (2.1, 2.2), 3));\n","/*\n----------------------------------------\nget-system-color()\n----------------------------------------\nDerive a system color from its\nfamily, value, and vivid or a passed\nvariable that is, itself, a list\n----------------------------------------\n*/\n\n@use \"sass:meta\";\n@use \"sass:list\";\n\n@use \"../../functions/general\";\n@use \"../../tokens/color/system-colors\" as color;\n\n@function get-system-color(\n  $color-family: false,\n  $color-grade: false,\n  $color-variant: false\n) {\n  // If the arg being passed to the fn\n  // is a variable defined as a list,\n  // $color-family will contain this\n  // entire list, and needs to be\n  // unpacked.\n  // ex:\n  //    in settings:\n  //      $theme-color-primary.'dark': 'blue', 70\n  //    in the theme colors map:\n  //      $color-primary-dark: get-system-color($theme-color-primary.'dark'),\n\n  @if meta.type-of($color-family) == \"list\" {\n    @if list.length($color-family) > 2 {\n      $color-variant: list.nth($color-family, 3);\n    }\n    $color-grade: list.nth($color-family, 2);\n    $color-family: list.nth($color-family, 1);\n  }\n\n  $color-family: general.smart-quote($color-family);\n  $color-variant: general.smart-quote($color-variant);\n\n  // If the arg being passed to the fn\n  // is false, it should output as `false`\n  // to preserve a false value in the\n  // target map\n  // ex:\n  //    in settings:\n  //      $theme-color-primary.'darkest': false;\n  //    in the theme colors map:\n  //      'darkest': get-system-color($theme-color-primary.'darkest'),\n  //      'darkest': false, // is the desired outcome\n  // TODO: should a false-pass color function be a separate fn?\n\n  @if not $color-family {\n    @return false;\n  }\n\n  @if $color-variant {\n    $output: general.map-deep-get(\n      color.$system-colors,\n      $color-family,\n      $color-variant,\n      $color-grade\n    );\n\n    @return $output;\n  }\n\n  $output: general.map-deep-get(\n    color.$system-colors,\n    $color-family,\n    $color-grade\n  );\n\n  @return $output;\n}\n","/*\n----------------------------------------\nset-theme-color()\n----------------------------------------\nDerive a color from a system color token\nor a hex value\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"sass:meta\";\n@use \"sass:string\";\n@use \"../../functions/general\";\n@use \"../../settings\";\n@use \"../../tokens/color/shortcodes-color-system\" as tokens;\n\n@function set-theme-color($value, $flag: null) {\n  $value: general.unpack($value);\n\n  // If it's a color, return that color\n  // Withhold warning if \"no-warn\" flag\n\n  @if meta.type-of($value) == color {\n    @if $flag == \"no-warn\" {\n      @return $value;\n    }\n\n    @if settings.$theme-show-compile-warnings {\n      @warn 'Override: `#{$value}` is not a USWDS color token.';\n    }\n\n    @return $value;\n  }\n\n  // If it's false, return false\n\n  @if $value == false {\n    @return $value;\n  }\n\n  // Any other value should be evaluated as a system token\n\n  $value: general.smart-quote($value);\n\n  @if map.has-key(tokens.$system-color-shortcodes, $value) {\n    $our-color: map.get(tokens.$system-color-shortcodes, $value);\n    @if $our-color == false {\n      @error 'USWDS does not include -90v color tokens';\n    }\n    @return $our-color;\n  }\n\n  @error '`#{$value}` is not a valid USWDS color token. '\n      + 'See designsystem.digital.gov/design-tokens/color '\n      + 'for more information.';\n}\n\n// @debug set-theme-color(\"red-50\");\n// @return #d83933;\n// @debug set-theme-color(false);\n// @return false;\n// @debug set-theme-color(\"red-90v\");\n// @return error \"no 90v tokens\";\n// @debug set-theme-color(#f00, no-warn);\n// @return #f00;\n// @debug set-theme-color(#f00);\n// @return #f00 + warning;\n// @debug set-theme-color(\"foo\");\n// @return error \"not valid\";\n","/*\n----------------------------------------\ncolor()\n----------------------------------------\nDerive a color from a color shortcode\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"sass:map\";\n@use \"sass:meta\";\n@use \"sass:string\";\n@use \"../../settings\" as *;\n@use \"../../functions/general\";\n@use \"../../tokens/color/shortcodes-color-all\" as *;\n\n@function color($value, $flags...) {\n  $value: general.unpack($value);\n\n  // Non-token colors may be passed with specific flags\n  @if meta.type-of($value) == color {\n    // override or set-theme will allow any color\n    @if list.index($flags, override) or list.index($flags, set-theme) {\n      // override + no-warn will skip warnings\n      @if list.index($flags, no-warn) {\n        @return $value;\n      }\n\n      @if $theme-show-compile-warnings {\n        @warn 'Override: `#{$value}` is not a USWDS color token.';\n      }\n\n      @return $value;\n    }\n  }\n\n  // False values may be passed through when setting theme colors\n  @if $value == false {\n    @if list.index($flags, set-theme) {\n      @return $value;\n    }\n  }\n\n  // Now, any value should be evaluated as a token\n\n  $value: general.smart-quote($value);\n\n  @if map.has-key($all-color-shortcodes, $value) {\n    $our-color: map.get($all-color-shortcodes, $value);\n    @if $our-color == false {\n      @error '`#{$value}` is a color that does not exist '\n        + 'or is set to false.';\n    }\n    @return $our-color;\n  }\n\n  // If we're using the theme flag, $project-color-shortcodes has not yet been set\n  @if not list.index($flags, set-theme) {\n    @if map.has-key($project-color-shortcodes, $value) {\n      $our-color: (map.get($project-color-shortcodes, $value));\n      @if $our-color == false {\n        @error '`#{$value}` is a color that does not exist '\n          + 'or is set to false.';\n      }\n      @return $our-color;\n    }\n  }\n\n  @return general.error-not-token($value, \"color\");\n}\n\n// @debug color(\"orange-80v\");\n// @return #352313;\n\n// @debug color(\"primary-dark\");\n// @return #1a4480;\n\n// @debug color(\"primary-lightest\");\n// @return error: set to false;\n\n// @debug color(#f00);\n// @return error: not a valid token;\n","@use \"root\";\n@use \"sass:math\";\n\n/*\n----------------------------------------\npx-to-rem()\n----------------------------------------\nConverts a value in px to a value in rem\n----------------------------------------\n*/\n\n@function px-to-rem($pixels) {\n  @if not $pixels {\n    @return false;\n  }\n  $px-to-rem: (math.div($pixels, root.$root-font-size-equiv)) * 1rem;\n  $px-to-rem: math.div(math.round($px-to-rem * 100), 100);\n\n  @return $px-to-rem;\n}\n\n// @debug px-to-rem(16px);\n// @return 1rem\n","/*\n----------------------------------------\nrem-to-px()\n----------------------------------------\nConverts a value in rem to a value in px\n----------------------------------------\n*/\n\n@use \"sass:math\";\n@use \"root\";\n\n@function rem-to-px($value-in-rem) {\n  @if unit($value-in-rem) == \"rem\" {\n    $rem-to-px: (math.div($value-in-rem, 1rem)) * root.$root-font-size-equiv;\n    @return $rem-to-px;\n  }\n  @if unit($value-in-rem) != \"px\" {\n    @error 'This value must be in either px or rem';\n  }\n  @return $value-in-rem;\n}\n\n// @debug rem-to-px(2rem);\n// @return 32px\n","/*\n----------------------------------------\nrem-to-user-em()\n----------------------------------------\nConverts a value in rem to a value in\n[user-settings] em for use in media\nqueries\n----------------------------------------\n*/\n\n@use \"sass:math\";\n\n@function rem-to-user-em($grid-in-rem) {\n  $rem-to-user-em: (math.div($grid-in-rem, 1rem)) * 1em;\n\n  @return $rem-to-user-em;\n}\n\n// @debug rem-to-user-em(2rem);\n// @return 2em\n","/*\n----------------------------------------\nspacing-multiple()\n----------------------------------------\nConverts a spacing unit multiple into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n\n@use \"sass:math\";\n@use \"../../tokens/units/grid-base\";\n@use \"root\";\n\n@function spacing-multiple($unit) {\n  $grid-to-rem: math.div(\n      (grid-base.$system-spacing-grid-base * $unit),\n      root.$root-font-size-equiv\n    ) * 1rem;\n\n  @return $grid-to-rem;\n}\n\n// @debug spacing-multiple(1);\n// @return 0.5rem\n","/*\n----------------------------------------\nnumber-to-token()\n----------------------------------------\nConverts an integer or numeric value\ninto a system value\n\nEx: 0.5   --> '05'\n    -1px  --> 'neg-1px'\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"sass:meta\";\n@use \"../../variables/project-spacing\" as vars;\n\n@function number-to-token($number) {\n  $number: meta.inspect($number);\n\n  @if not(map.has-key(vars.$number-to-value, $number)) {\n    @return false;\n  }\n\n  @return map.get(vars.$number-to-value, $number);\n}\n\n// @debug number-to-token(0.5);\n// @return 05;\n","/*\n----------------------------------------\nunits()\n----------------------------------------\nConverts a spacing unit into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"sass:meta\";\n@use \"sass:string\";\n@use \"../../functions/general/error-not-token.scss\";\n@use \"../../functions/output/number-to-token\" as *;\n@use \"../../variables/project-spacing\" as vars;\n\n@function units($value) {\n  $converted: if(\n    meta.type-of($value) == \"string\",\n    string.quote($value),\n    number-to-token($value)\n  );\n\n  @if not(map.has-key(vars.$project-spacing-standard, $converted)) {\n    @return error-not-token(\n      $value,\n      \"spacing unit\",\n      vars.$project-spacing-standard\n    );\n  }\n\n  @return map.get(vars.$project-spacing-standard, $converted);\n}\n\n// @debug units(0.5);\n// @return 0.25rem;\n","/*\n----------------------------------------\nProject fonts\n----------------------------------------\nCollects font settings in a map for\nlooping.\n----------------------------------------\n*/\n\n@use \"../settings\";\n\n$project-font-type-tokens: (\n  \"cond\": (\n    \"typeface-token\": settings.$theme-font-type-cond,\n    \"custom-stack\": settings.$theme-font-cond-custom-stack,\n    \"src\": settings.$theme-font-cond-custom-src,\n  ),\n  \"icon\": (\n    \"typeface-token\": settings.$theme-font-type-icon,\n    \"custom-stack\": settings.$theme-font-icon-custom-stack,\n    \"src\": settings.$theme-font-icon-custom-src,\n  ),\n  \"lang\": (\n    \"typeface-token\": settings.$theme-font-type-lang,\n    \"custom-stack\": settings.$theme-font-lang-custom-stack,\n    \"src\": settings.$theme-font-lang-custom-src,\n  ),\n  \"mono\": (\n    \"typeface-token\": settings.$theme-font-type-mono,\n    \"custom-stack\": settings.$theme-font-mono-custom-stack,\n    \"src\": settings.$theme-font-mono-custom-src,\n  ),\n  \"sans\": (\n    \"typeface-token\": settings.$theme-font-type-sans,\n    \"custom-stack\": settings.$theme-font-sans-custom-stack,\n    \"src\": settings.$theme-font-sans-custom-src,\n  ),\n  \"serif\": (\n    \"typeface-token\": settings.$theme-font-type-serif,\n    \"custom-stack\": settings.$theme-font-serif-custom-stack,\n    \"src\": settings.$theme-font-serif-custom-src,\n  ),\n);\n","/*\n----------------------------------------\nLuminance ranges\n----------------------------------------\n*/\n\n$system-color-grades: (\n  100: (\n    \"min\": 0,\n    \"max\": 0,\n  ),\n  90: (\n    \"min\": 0.005,\n    \"max\": 0.015,\n  ),\n  80: (\n    \"min\": 0.02,\n    \"max\": 0.04,\n  ),\n  70: (\n    \"min\": 0.05,\n    \"max\": 0.07,\n  ),\n  60: (\n    \"min\": 0.1,\n    \"max\": 0.125,\n  ),\n  50: (\n    \"min\": 0.175,\n    \"max\": 0.183,\n  ),\n  40: (\n    \"min\": 0.225,\n    \"max\": 0.3,\n  ),\n  30: (\n    \"min\": 0.35,\n    \"max\": 0.45,\n  ),\n  20: (\n    \"min\": 0.5,\n    \"max\": 0.65,\n  ),\n  10: (\n    \"min\": 0.75,\n    \"max\": 0.82,\n  ),\n  5: (\n    \"min\": 0.85,\n    \"max\": 0.93,\n  ),\n  0: (\n    \"min\": 1,\n    \"max\": 1,\n  ),\n);\n","/*\n----------------------------------------\nns()\n----------------------------------------\nAdd a namesspace of $type if that\nnamespace is set to output\n----------------------------------------\n*/\n\n@use \"../../settings\";\n@use \"../../functions/general/map-deep-get\" as *;\n@use \"../../functions/general/smart-quote\" as *;\n\n@function ns($type) {\n  $type: smart-quote($type);\n\n  @if not map-deep-get(settings.$theme-namespace-complete, $type, output) {\n    @return \"\";\n  }\n\n  @return map-deep-get(settings.$theme-namespace-complete, $type, namespace);\n}\n\n// @debug ns(\"grid\");\n// @return grid-\n","/*\n----------------------------------------\nLine height\n----------------------------------------\n*/\n\n$system-line-height: (\n  1: 1,\n  2: 1.2,\n  3: 1.35,\n  4: 1.5,\n  5: 1.62,\n  6: 1.75,\n);\n","/*\n----------------------------------------\nMeasure\n----------------------------------------\n*/\n\n$system-measure-smaller: 44ex;\n$system-measure-small: 60ex;\n$system-measure-base: 64ex;\n$system-measure-large: 68ex;\n$system-measure-larger: 72ex;\n$system-measure-largest: 88ex;\n","/*\n----------------------------------------\nvalidate-typeface-token()\n----------------------------------------\nCheck to see if a typeface-token exists.\nThrow an error if a passed token does\nnot exist in the typeface-token map.\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../tokens\";\n@use \"../general/error-not-token\" as *;\n\n@function validate-typeface-token($typeface-token) {\n  @if not map.has-key(tokens.$all-typeface-tokens, $typeface-token) {\n    @return error-not-token($typeface-token, \"typeface\", $all-typeface-tokens);\n  }\n\n  @return $typeface-token;\n}\n\n// @debug validate-typeface-token(\"public-sans\");\n// @return public-sans\n\n// @debug validate-typeface-token(\"foo\");\n// @return error\n","/*\n----------------------------------------\ncap-height()\n----------------------------------------\nGet the cap height of a valid typeface\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../tokens\";\n@use \"validate-typeface-token\" as *;\n\n@function cap-height($typeface-token) {\n  @if not $typeface-token {\n    @return false;\n  }\n\n  $typeface-token: validate-typeface-token($typeface-token);\n  $token-data: map.get(tokens.$all-typeface-tokens, $typeface-token);\n  @return map.get($token-data, \"cap-height\");\n}\n\n// @debug cap-height(\"public-sans\");\n// @return 362px;\n","/*\n----------------------------------------\nconvert-to-font-type()\n----------------------------------------\nConverts a font-role token into a\nfont-type token. Leaves font-type tokens\nunchanged.\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../variables/font-role-tokens\" as *;\n\n@function convert-to-font-type($token) {\n  @if map.has-key($project-font-role-tokens, $token) {\n    @return map.get($project-font-role-tokens, $token);\n  }\n\n  @return $token;\n}\n\n// @debug convert-to-font-type(\"heading\");\n// @return serif\n","@use \"sass:map\";\n@use \"sass:string\";\n@use \"sass:list\";\n\n@use \"../../settings\" as *;\n\n/*\n----------------------------------------\nfont-sources()\n----------------------------------------\nOutputs a list of font sources used in\na @font-face declaration.\n\n$theme-font-browser-compatibility: true - output woff2, woff, ttf\n$theme-font-browser-compatibility: false - output woff2\n\n@param stem: string - [font path]/[custom-src.dir]/[custom-src.[style].[weight]]\n@output: string\n\nfiletypes must be one of the filetypes set in variables/$project-font-face-filetypes (woff, woff2, ttf)\n----------------------------------------\n*/\n\n@function font-sources($stem) {\n  @if $theme-font-browser-compatibility {\n    @return url(#{$stem}.woff2) format(\"woff2\"),\n      url(#{$stem}.woff) format(\"woff\"), url(#{$stem}.ttf) format(\"truetype\");\n  }\n\n  @return url(#{$stem}.woff2) format(\"woff2\");\n}\n","/*\n----------------------------------------\nget-font-stack()\n----------------------------------------\nGet a font stack from a style- or\nrole-based font token.\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"sass:string\";\n@use \"../../variables/font-type-tokens\" as types;\n@use \"../../tokens/font/typefaces\" as typefaces;\n@use \"../../functions/general\";\n@use \"convert-to-font-type\" as *;\n\n@function get-font-stack($token) {\n  // Start by converting to a type token (sans, serif, etc)\n  $type-token: convert-to-font-type($token);\n  $output-display-name: true;\n  $this-stack: null;\n  // Get the font type metadata\n  $this-font-map: map.get(types.$project-font-type-tokens, $type-token);\n  // Only output if the font type has an assigned typeface token\n  @if map.get($this-font-map, \"typeface-token\") {\n    $this-font-token: map.get($this-font-map, \"typeface-token\");\n    // Get the typeface metadata\n    $this-typeface-data: map.get(\n      typefaces.$all-typeface-tokens,\n      $this-font-token\n    );\n    $this-name: map.get($this-typeface-data, \"display-name\");\n    // If it's a system typeface, don't output the display name\n    @if map.has-key($this-typeface-data, \"system-font\") {\n      $output-display-name: false;\n      // @debug \"it's a system font\";\n    }\n    // If there's a custom stack, use it and output the display name\n    @if map.get($this-font-map, \"custom-stack\") {\n      $this-stack: map.get($this-font-map, \"custom-stack\");\n      $output-display-name: true;\n      // @debug \"it has a custom stack\";\n    }\n    // Otherwise, just get the token's default stack\n    @else {\n      $this-stack: general.map-deep-get(\n        typefaces.$all-typeface-tokens,\n        $this-font-token,\n        \"stack\"\n      );\n    }\n    // If the typeface has no display name (system fonts), don't output the display name\n    @if not map.get($this-typeface-data, \"display-name\") {\n      $output-display-name: false;\n    }\n    @if not $output-display-name {\n      @return #{$this-stack};\n    }\n    @return string.unquote(\"#{$this-name}, #{$this-stack}\");\n  }\n  @return false;\n}\n\n// @debug get-font-stack(\"heading\");\n// @return Merriweather Web, Georgia, Cambria, Times New Roman, Times, serif\n","/*\n----------------------------------------\nget-typeface-token()\n----------------------------------------\nGet a typeface token from a font-type or\nfont-role token.\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../general\";\n@use \"../../variables/font-role-tokens\" as *;\n@use \"../../variables/font-type-tokens\" as *;\n\n@function get-typeface-token($font-token) {\n  $this-token: $font-token;\n  @if map.has-key($project-font-role-tokens, $font-token) {\n    $this-token: map.get($project-font-role-tokens, $font-token);\n  }\n  @return general.map-deep-get(\n    $project-font-type-tokens,\n    $this-token,\n    \"typeface-token\"\n  );\n}\n\n// @debug get-typeface-token(\"sans\");\n// @return source-sans-pro\n// @debug get-typeface-token(\"heading\");\n// @return merriweather\n","/*\n----------------------------------------\nnormalize-type-scale()\n----------------------------------------\nNormalizes a specific face's optical size\nto a set target\n----------------------------------------\n*/\n\n@use \"sass:math\";\n@use \"../../tokens\";\n@use \"../general\";\n@use \"../units\";\n\n@function normalize-type-scale($cap-height, $scale) {\n  @if not $cap-height {\n    @return false;\n  }\n\n  $this-scale: tokens.$system-base-cap-height *\n    math.div(general.strip-unit($scale), $cap-height) * 1px;\n\n  @return units.px-to-rem($this-scale);\n}\n\n// @debug normalize-type-scale(362px, 16px);\n// @return 1rem\n","/*\n----------------------------------------\nsystem-type-scale()\n----------------------------------------\nGet a value from the system type scale\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../functions/general\";\n@use \"../../tokens/font\";\n\n@function system-type-scale($scale) {\n  $scale: general.smart-quote($scale);\n\n  @if not $scale {\n    @return false;\n  }\n\n  @if not(map.has-key(font.$system-type-scale, $scale)) {\n    @return general.error-not-token($scale, \"type scale\", $system-type-scale);\n  }\n\n  @return map.get(font.$system-type-scale, $scale);\n}\n\n// @debug system-type-scale(2);\n// @return 13px;\n","/*\n----------------------------------------\nEasing\n----------------------------------------\n*/\n$project-easing: 0.15s ease-in-out;\n","/*  deprecated.scss\n    ---\n    Occasionally the design system will deprecate\n    old variables or functionality. If we replace\n    the old functionality with something new, this is a\n    place to connect the old functionality to the\n    new functionality, in the service of better\n    continuity and backwards compatibility within a\n    major release cycle.\n\n    Note the USWDS version where we deprecated the\n    old functionality in a comment.\n\n    Be sure to update notifications.scss.\n\n    This file should started fresh at each\n    major version.\n*/\n\n// Deprecated in 3.0.0\n$output-all-utilities: true !default;\n\n// Deprecated in 3.1.0\n@use \"sass:math\";\n\n@mixin embed-container($height, $width) {\n  padding-bottom: math.percentage(math.div($height, $width));\n}\n\n$font-smoothing-warning: \"Font smoothing was deprecated in USWDS 3.5.0. Please remove any references to it.\";\n\n// Deprecated in 3.5.0\n@mixin add-knockout-font-smoothing {\n  @warn $font-smoothing-warning;\n}\n\n@mixin no-knockout-font-smoothing {\n  @warn $font-smoothing-warning;\n}\n","/*\n----------------------------------------\nadvanced-color()\n----------------------------------------\nDerive a color from a color triplet:\n[family], [grade], [variant]\n----------------------------------------\n*/\n\n// color() can have a 1, 2, or 3 arguments passed to it:\n//\n// [family]\n// ex: color('primary')\n//     - the default in a theme palette family\n//\n// [family], [grade]\n// ex: color('red', 50)\n//     - a standard system color\n// ex: color('accent-warm', 'light')\n//     - a standard theme color\n// ex: color('primary', 'vivid')\n//     - in theme colors, 'vivid' is considered a grade\n//\n// [family], [grade], [vivid]\n// ex: color('red', 50, 'vivid')\n//     - a vivid system color\n//     - only system colors required three arguments\n\n@use \"sass:meta\";\n@use \"sass:list\";\n@use \"sass:map\";\n@use \"../general\";\n@use \"get-system-color\" as *;\n\n@function advanced-color(\n  $color-family: false,\n  $color-grade: false,\n  $color-variant: false\n) {\n  // Convert any arglists into lists\n  $color-family: if(\n    meta.type-of($color-family) == \"arglist\",\n    general.unpack($color-family),\n    $color-family\n  );\n\n  // If $color-family is a list, color() had a variable\n  // passed to it, and args need to be re-set with the\n  // values from the $color-family list:\n  @if meta.type-of($color-family) == \"list\" {\n    @if list.length($color-family) > 2 {\n      $color-variant: list.nth($color-family, 3);\n    }\n    $color-grade: list.nth($color-family, 2);\n    $color-family: list.nth($color-family, 1);\n  }\n\n  // Set initial state of vars\n  $color-family: general.smart-quote($color-family);\n  $color-grade: general.smart-quote($color-grade);\n  $color-variant: general.smart-quote($color-variant);\n\n  // @debug '#{$color-family}: #{meta.type-of($color-family)}, #{$color-grade}: #{meta.type-of($color-grade)}, #{$color-variant}: #{meta.type-of($color-variant)}' ;\n\n  // If there are no args, throw an error\n  @if not $color-family {\n    @error 'Include a color in the form [family], [grade], [vivid]';\n  }\n\n  // If the grade is a number, it's a system color\n  // ex: ('red', 50)\n  @if meta.type-of($color-grade) == \"number\" {\n    @return get-system-color($color-family, $color-grade, $color-variant);\n  }\n\n  // non-number grades are associated with non-default theme colors\n  // ex: ('base', 'darker')\n  // default theme colors have no grade\n  // ex: ('base')\n  @if map.has-key($all-project-colors, $color-family) {\n    @if not\n      map.has-key(map.get($all-project-colors, $color-family), $color-grade)\n    {\n      @error '`#{$color-grade}` is not a valid grade of `#{$color-family}`. '\n        + 'Valid grades: '\n        + '#{map.keys(map.get($all-project-colors, $color-family))}';\n    }\n  } @else {\n    @return general.error-not-token(\n      $color-family,\n      \"theme family\",\n      $all-project-colors\n    );\n  }\n  @return general.map-deep-get(\n    $all-project-colors,\n    $color-family,\n    $color-grade\n  );\n}\n\n// @debug advanced-color(\"red\", 50, \"vivid\");\n// @return #e52207;\n","/*\n----------------------------------------\nis-system-color-token()\n----------------------------------------\nReturn whether a token is a system\ncolor token\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../tokens/color/shortcodes-color-system\" as *;\n\n@function is-system-color-token($token) {\n  @if map.has-key($system-color-shortcodes, $token) {\n    @return true;\n  }\n  @return false;\n}\n\n// @debug is-system-color-token(\"red-cool-5v\");\n// @return true;\n","/*\n----------------------------------------\nis-theme-color-token()\n----------------------------------------\nReturn whether a token is a theme\ncolor token\n----------------------------------------\n*/\n\n@use \"sass:map\";\n\n@use \"../../tokens/color/shortcodes-color-project\" as *;\n\n@function is-theme-color-token($token) {\n  @if map.has-key($project-color-shortcodes, $token) {\n    @return true;\n  }\n  @return false;\n}\n","/*\n----------------------------------------\ncolor-token-assignment()\n----------------------------------------\nGet the system token equivalent of any\ntheme color token\n----------------------------------------\n*/\n\n@use \"sass:map\";\n\n@use \"is-system-color-token\" as *;\n@use \"is-theme-color-token\" as *;\n@use \"../general/error-not-token\" as *;\n@use \"../../tokens/color/assignments-theme-color\" as *;\n\n@function color-token-assignment($color-token) {\n  @if is-system-color-token($color-token) {\n    $system-token: $color-token;\n    @return $system-token;\n  }\n\n  @if not is-theme-color-token($color-token) {\n    @return error-not-token($color-token, \"color\");\n  }\n\n  $theme-token: $color-token;\n  $theme-token-assignment: map.get($assignments-theme-color, $theme-token);\n  @return $theme-token-assignment;\n}\n","/*\n----------------------------------------\ndecompose()\n----------------------------------------\nConvert a color token into into a list\nof form [family], [grade], [variant]\nVivid variants return \"vivid\" as the\nvariant.\nIf neither grade nor variant exists,\nreturns 'null'\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"sass:map\";\n@use \"sass:meta\";\n@use \"sass:string\";\n\n@use \"../general/str-split\" as *;\n@use \"../general/to-number\" as *;\n\n@function decompose-color-token($token) {\n  $separator: \"-\";\n  $family: false;\n  $grade: false;\n  $variant: false;\n  $exceptions: (\n    \"black\": 100,\n    \"white\": 0,\n  );\n\n  $token: if($token == \"ink\", \"base-darkest\", $token);\n  // If there's no separator, set family and grade\n  @if not string.index($token, $separator) {\n    $family: $token;\n    $grade: if(\n      map.has-key($exceptions, $family),\n      map.get($exceptions, $family),\n      \"root\"\n    );\n  } @else {\n    $split: str-split($token, $separator);\n    $last: list.nth($split, list.length($split));\n    // If the last string is over 3 char, it's a theme token\n    @if string.length($last) > 3 {\n      @if $last == \"vivid\" {\n        $variant: \"vivid\";\n        $grade: \"root\";\n      } @else if $last == \"warm\" or $last == \"cool\" {\n        $grade: \"root\";\n      } @else {\n        $grade: $last;\n      }\n      // Otherwise treat as system token\n    } @else {\n      // Determine if it's a vivid variant\n      @if string.index($last, \"v\") {\n        $variant: \"vivid\";\n        $grade: string.slice($last, 1, (string.index($last, \"v\") - 1));\n      } @else {\n        $grade: $last;\n      }\n      // Make sure the grade is a number\n      $grade: if(meta.type-of($grade) == \"string\", to-number($grade), $grade);\n    }\n    // Collect compound-word families\n    $is-compound-family: false;\n    @if list.length($split) ==\n      3 or\n      list.index($split, \"warm\") or\n      list.index($split, \"cool\")\n    {\n      $is-compound-family: true;\n    }\n    @if $is-compound-family {\n      $family: list.nth($split, 1) + $separator + list.nth($split, 2);\n    } @else {\n      $family: list.nth($split, 1);\n    }\n  }\n  @return $family, $grade, $variant;\n}\n\n// @debug decompose-color-token(\"accent-cool\");\n","/*\n----------------------------------------\ncolor-token-family()\n----------------------------------------\nReturns the family of a color token.\nReturns: color-family\ncolor-token-family(\"accent-warm-vivid\")\n> \"accent-warm\"\ncolor-token-family(\"red-50v\")\n> \"red\"\ncolor-token-variant((\"red\", 50, \"vivid\"))\n> \"red\"\n----------------------------------------\n*/\n\n@use \"sass:meta\";\n@use \"sass:list\";\n\n@use \"decompose-color-token\" as *;\n\n@function color-token-family($color-token) {\n  $split: if(\n    meta.type-of($color-token) == \"list\",\n    $color-token,\n    decompose-color-token($color-token)\n  );\n  $family: list.nth($split, 1);\n  @return $family;\n}\n","/*\n----------------------------------------\ncolor-token-grade()\n----------------------------------------\nReturns the grade of a USWDS color token.\nReturns: color-grade\ncolor-token-grade(\"accent-warm\")\n> \"root\"\ncolor-token-grade(\"accent-warm-vivid\")\n> \"root\"\ncolor-token-grade(\"accent-warm-darker\")\n> \"darker\"\ncolor-token-grade(\"red-50v\")\n> 50\ncolor-token-variant((\"red\", 50, \"vivid\"))\n> 50\n----------------------------------------\n*/\n\n@use \"sass:meta\";\n@use \"sass:list\";\n\n@use \"decompose-color-token\" as *;\n\n@function color-token-grade($color-token) {\n  $split: if(\n    meta.type-of($color-token) == \"list\",\n    $color-token,\n    decompose-color-token($color-token)\n  );\n  $grade: list.nth($split, 2);\n  @return $grade;\n}\n","/*\n----------------------------------------\nis-color-token()\n----------------------------------------\nReturns whether a given string is a\nUSWDS color token.\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../tokens/color/shortcodes-color-all\" as *;\n\n@function is-color-token($token) {\n  $is-color-token: if(map.has-key($all-color-shortcodes, $token), true, false);\n  @return $is-color-token;\n}\n\n// @debug is-color-token(\"red-warm-50\");\n// @return true\n","// @TODO candidate for removal because of built-in math.pow()\n// https://sass-lang.com/documentation/modules/math#pow\n\n@use \"sass:math\";\n@use \"sass:meta\";\n\n/*\n----------------------------------------\npow()\n----------------------------------------\nRaises a unitless number to the power\nof another unitless number\nIncludes helper functions\n----------------------------------------\n*/\n\n@function pow($number, $exponent) {\n  @if (math.round($exponent) != $exponent) {\n    @return exp($exponent * ln($number));\n  }\n\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $i from 1 through $exponent {\n      $value: $value * $number;\n    }\n  } @else if $exponent < 0 {\n    @for $i from 1 through -$exponent {\n      $value: math.div($value, $number);\n    }\n  }\n\n  @return $value;\n}\n\n/*\n----------------------------------------\nHelper functions\n----------------------------------------\n*/\n\n/* factorial()\n----------------------------------------\n*/\n\n@function factorial($value) {\n  $result: 1;\n\n  @if $value == 0 {\n    @return $result;\n  }\n\n  @for $index from 1 through $value {\n    $result: $result * $index;\n  }\n\n  @return $result;\n}\n\n/* summation()\n----------------------------------------\n*/\n@function summation($iteratee, $input, $initial: 0, $limit: 100) {\n  $sum: 0;\n\n  @for $index from $initial to $limit {\n    $sum: $sum + meta.call($iteratee, $input, $index);\n  }\n\n  @return $sum;\n}\n\n/* exp-maclaurin()\n----------------------------------------\n*/\n@function exp-maclaurin($x, $n) {\n  @return math.div(pow($x, $n), factorial($n));\n}\n\n@function exp($value) {\n  @return summation(meta.get-function(\"exp-maclaurin\"), $value, 0, 100);\n}\n\n@function ln-maclaurin($x, $n) {\n  @return math.div(pow(-1, $n + 1), $n) * (pow($x - 1, $n));\n}\n\n@function summation($iteratee, $input, $initial: 0, $limit: 100) {\n  $sum: 0;\n\n  @for $index from $initial to $limit {\n    $sum: $sum + meta.call($iteratee, $input, $index);\n  }\n\n  @return $sum;\n}\n\n/* ln()\n----------------------------------------\n*/\n@function ln($value) {\n  $ten-exp: 1;\n  $ln-ten: 2.30258509;\n\n  @while ($value > pow(10, $ten-exp)) {\n    $ten-exp: $ten-exp + 1;\n  }\n\n  @return summation(\n      meta.get-function(\"ln-maclaurin\"),\n      math.div($value, pow(10, $ten-exp)),\n      1,\n      100\n    ) + $ten-exp * $ln-ten;\n}\n","/*\n----------------------------------------\ncalculate-grade()\n----------------------------------------\nDerive the grade equivalent any color,\neven non-token colors\n----------------------------------------\n*/\n\n@use \"sass:color\";\n@use \"sass:meta\";\n@use \"sass:map\";\n@use \"sass:math\";\n@use \"sass:list\";\n@use \"sass:string\";\n\n@use \"../general\";\n@use \"../../variables/luminance-grade-ranges\" as *;\n@use \"color-token-assignment\" as *;\n@use \"color-token-family\" as *;\n@use \"color-token-grade\" as *;\n@use \"decompose-color-token\" as *;\n@use \"is-color-token\" as *;\n@use \"luminance\" as *;\n\n@function calculate-grade($color-token) {\n  $transparency-error: \"USWDS can't calculate the grade of a transparent color. Avoid using transparency in theme colors and text.\";\n  $grade: null;\n  $lum: null;\n  $custom-color: false;\n  $color-token-assignment: false;\n\n  // Determine if the color is a custom color\n  @if meta.type-of($color-token) == \"color\" {\n    $custom-color: $color-token;\n  } @else {\n    $color-token-assignment: color-token-assignment($color-token);\n    @if meta.type-of($color-token-assignment) == \"color\" {\n      $custom-color: color-token-assignment($color-token);\n    }\n  }\n\n  // If it's custom, compare its rLum to USWDS grade rLum ranges\n  @if $custom-color {\n    // If the color uses transparency, throw an error\n    @if color.alpha($custom-color) != 1 {\n      @return general.uswds-error($transparency-error);\n    }\n    $lum: luminance($custom-color);\n    // Cycle through grades, knowing current AND next grade\n    $our-grades: map.keys($system-color-grades);\n    $grade-count: list.length($our-grades);\n    @for $i from 1 through $grade-count {\n      $this-grade: list.nth($our-grades, $i);\n      $this-grade-min: general.map-deep-get(\n        $system-color-grades,\n        $this-grade,\n        \"min\"\n      );\n      $this-grade-max: general.map-deep-get(\n        $system-color-grades,\n        $this-grade,\n        \"max\"\n      );\n      $next-grade: if($i < $grade-count, list.nth($our-grades, $i + 1), false);\n      $next-grade-min: if(\n        $next-grade,\n        general.map-deep-get($system-color-grades, $next-grade, \"min\"),\n        false\n      );\n      // If the lum fits the range, assign a USWDS grade\n      // Otherwise, set a grade midway between two USWDS grades\n      @if ($lum >= $this-grade-min) and ($lum <= $this-grade-max) {\n        @return $this-grade;\n      }\n      @if ($lum > $this-grade-max) and ($lum < $next-grade-min) {\n        $custom-grade-midpoint: math.div(($this-grade + $next-grade), 2);\n        $custom-grade: $custom-grade-midpoint;\n        @return $custom-grade;\n      }\n    }\n  }\n\n  @if not is-color-token($color-token-assignment) {\n    @return general.error-not-token($color-token-assignment, \"color\");\n  }\n\n  $system-token: $color-token-assignment;\n  $token-split: decompose-color-token($system-token);\n  $token-family: color-token-family($token-split);\n  // If the color uses transparency, throw an error\n  @if string.index($token-family, \"transparent\") {\n    @return general.uswds-error($transparency-error);\n  }\n  // Otherwise, return token grade\n  $token-grade: color-token-grade($token-split);\n  @return $token-grade;\n}\n\n// @debug calculate-grade(\"red-60v\");\n// @return 60;\n","/*\n----------------------------------------\ncolor-token-type()\n----------------------------------------\nReturns the type of a color token.\nReturns: \"system\" | \"theme\"\n----------------------------------------\n*/\n\n@use \"../general/error-not-token\" as *;\n@use \"is-system-color-token\" as *;\n@use \"is-theme-color-token\" as *;\n\n@function color-token-type($token) {\n  $type: if(is-system-color-token($token), \"system\", false);\n  @if not $type {\n    $type: if(is-theme-color-token($token), \"theme\", false);\n  }\n  @if not $type {\n    @return error-not-token($token, \"color\");\n  }\n  @return $type;\n}\n","/*\n----------------------------------------\ncolor-token-variant()\n----------------------------------------\nReturns the variant of color token.\nReturns: \"vivid\" | false\ncolor-token-variant(\"accent-warm\")\n> false\ncolor-token-variant(\"accent-warm-vivid\")\n> \"vivid\"\ncolor-token-variant(\"red-50v\")\n> \"vivid\"\ncolor-token-variant((\"red\", 50, \"vivid\"))\n> \"vivid\"\n----------------------------------------\n*/\n\n@use \"sass:meta\";\n@use \"sass:list\";\n\n@use \"./decompose-color-token\" as *;\n\n@function color-token-variant($color-token) {\n  $split: if(\n    meta.type-of($color-token) == \"list\",\n    $color-token,\n    decompose-color-token($color-token)\n  );\n  $variant: list.nth($split, 3);\n  @return $variant;\n}\n","/*\n----------------------------------------\nmagic-number()\n----------------------------------------\nReturns the magic number of two color\ngrades. Takes numbers or color tokens.\nmagic-number(50, 10)\nreturn: 40\nmagic-number(\"red-50\", \"red-10\")\nreturn: 40\n----------------------------------------\n*/\n\n@use \"sass:math\";\n@use \"sass:meta\";\n@use \"calculate-grade\" as *;\n\n@function magic-number($grade-1, $grade-2) {\n  $grade-1: if(\n    meta.type-of($grade-1) == \"number\",\n    $grade-1,\n    calculate-grade($grade-1)\n  );\n  $grade-2: if(\n    meta.type-of($grade-2) == \"number\",\n    $grade-2,\n    calculate-grade($grade-2)\n  );\n  $magic-number: math.abs($grade-1 - $grade-2);\n  @return $magic-number;\n}\n\n// @debug magic-number(100, 30);\n// @return 70;\n\n// @debug magic-number(\"red-50\", \"red-10\")\n// @return 40\n","/*\n----------------------------------------\nwcag-magic-number()\n----------------------------------------\nReturns the magic number of a specific\nwcag grade:\n\"AA\"\n\"AA-Large\"\n\"AAA\"\nwcag-magic-number(\"AA\")\n> 50\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"../../variables/wcag-magic-numbers\" as *;\n\n@function wcag-magic-number($wcag-target) {\n  $wcag-magic-number: map.get($system-wcag-magic-numbers, $wcag-target);\n  @return $wcag-magic-number;\n}\n","/*\n----------------------------------------\nis-accessible-magic-number()\n----------------------------------------\nReturns whether two grades achieve\nspecified target color contrast\nReturns: true | false\nis-accessible-magic-number(10, 50, \"AA\")\n> false\nis-accessible-magic-number(10, 60, \"AA\")\n> true\n----------------------------------------\n*/\n\n@use \"magic-number\" as *;\n@use \"wcag-magic-number\" as *;\n\n@function is-accessible-magic-number($grade-1, $grade-2, $wcag-target) {\n  $target-magic-number: wcag-magic-number($wcag-target);\n  $magic-number: magic-number($grade-1, $grade-2);\n  @if $magic-number >= $target-magic-number {\n    @return true;\n  }\n  @return false;\n}\n","/*\n----------------------------------------\nnext-token()\n----------------------------------------\nReturns next \"darker\" or \"lighter\" color\ntoken of the same token type and variant.\nReturns: color-token | false\nnext-token(\"accent-warm\", \"lighter\")\n> \"accent-warm-light\"\nnext-token(\"gray-10\", \"lighter\")\n> \"gray-5\"\nnext-token(\"gray-5\", \"lighter\")\n> \"white\"\nnext-token(\"white\", \"lighter\")\n> false\nnext-token(\"red-50v\", \"darker\")\n> \"red-60v\"\nnext-token(\"red-50\", \"darker\")\n> \"red-60\"\nnext-token(\"red-80v\", \"darker\")\n> \"red-90\"\nnext-token(\"red-90\", \"darker\")\n> \"black\"\nnext-token(\"white\", \"darker\")\n> \"gray-5\"\nnext-token(\"black\", \"lighter\")\n> \"gray-90\"\n----------------------------------------\n*/\n\n@use \"sass:string\";\n@use \"sass:map\";\n@use \"sass:list\";\n\n@use \"../../variables/luminance-grade-ranges\" as *;\n@use \"../../variables/theme-color-grades\" as *;\n@use \"color-token-family\" as *;\n@use \"color-token-grade\" as *;\n@use \"color-token-type\" as *;\n@use \"color-token-assignment\" as *;\n@use \"decompose-color-token\" as *;\n@use \"color-token-variant\" as *;\n\n@function next-token($token, $direction) {\n  $next-token: false;\n  $type: color-token-type($token);\n  $token-split: decompose-color-token($token);\n  // 1. System case\n  @if $type == \"system\" {\n    // transparent tokens return don't have a next token\n    @if $token == \"transparent\" {\n      @return false;\n    }\n    // black and white tokens use the gray family for next\n    $current-family: if(\n      $token == \"white\" or $token == \"black\",\n      \"gray\",\n      color-token-family($token-split)\n    );\n    // black- and white-transparent tokens don't have a next\n    @if string.index($current-family, \"-transparent\") {\n      @return false;\n    }\n    $current-grade: color-token-grade($token-split);\n    // Nothing can be darker than black or lighter than white\n    @if $direction == \"darker\" and $current-grade == 100 {\n      @return false;\n    }\n    @if $direction == \"lighter\" and $current-grade == 0 {\n      @return false;\n    }\n    // Grades under 5 should be treated as 5\n    @if $current-grade > 0 and $current-grade < 5 {\n      $current-grade: 5;\n    }\n    $system-grade-list: map.keys($system-color-grades);\n    $current-grade-index: list.index($system-grade-list, $current-grade);\n    // Note: System grades go from darkest (100) to lightest (0)\n    $next-grade: if(\n      $direction == \"darker\",\n      list.nth($system-grade-list, ($current-grade-index - 1)),\n      list.nth($system-grade-list, ($current-grade-index + 1))\n    );\n    $output-grade: $next-grade;\n    // Keep the same vivid variant as the parent\n    // Note: Grade 90 has no vivid variant\n    @if color-token-variant($token-split) == \"vivid\" and ($next-grade < 90) {\n      $output-grade: $next-grade + \"v\";\n    }\n    // Use black and white tokens for grades 100 and 0...\n    @if $next-grade == 100 {\n      $next-token: \"black\";\n    } @else if $next-grade == 0 {\n      $next-token: \"white\";\n      // ...Otherwise output token in expected form\n    } @else {\n      $next-token: $current-family + \"-\" + $output-grade;\n    }\n    // 2. Theme case\n  } @else {\n    $current-grade: color-token-grade($token-split);\n    // Vivid theme token should be considered root for ordering\n    $current-grade: if($current-grade == \"vivid\", \"root\", $current-grade);\n    $current-family: color-token-family($token-split);\n    // Ink should be considered base-darkest\n    // TODO: Should it?\n    @if $token == \"ink\" {\n      $current-family: \"base\";\n      $current-grade: \"darkest\";\n    }\n    // Black is darker than darkest\n    @if $direction == \"darker\" and $current-grade == \"darkest\" {\n      @return \"black\";\n    }\n    // White is lighter than lightest\n    @if $direction == \"lighter\" and $current-grade == \"lightest\" {\n      @return \"white\";\n    }\n    $theme-grade-list: map.keys($theme-color-grades);\n    $current-grade-index: list.index($theme-grade-list, $current-grade);\n    // Note: Theme grades go from `lightest` to `darkest`\n    $next-grade: if(\n      $direction == \"darker\",\n      list.nth($theme-grade-list, ($current-grade-index + 1)),\n      list.nth($theme-grade-list, ($current-grade-index - 1))\n    );\n    // Exclude `root` from token output\n    @if $next-grade == \"root\" {\n      @return $current-family;\n    } @else {\n      $next-token: $current-family + \"-\" + $next-grade;\n    }\n    // If the next color is set to false, use black/white instead\n    @if not color-token-assignment($next-token) {\n      @if $direction == \"darker\" {\n        @return \"black\";\n      }\n      @if $direction == \"lighter\" {\n        @return \"white\";\n      }\n    }\n  }\n  @return $next-token;\n}\n\n// @debug next-token(\"gray-10\", \"lighter\");\n// @return gray-5;\n\n// @debug next-token(\"red-80v\", \"darker\");\n// @return red-90;\n\n// @debug next-token(\"accent-warm\", \"lighter\");\n// @return accent-warm-light;\n\n// @debug next-token(\"white\", \"lighter\");\n// @return false;\n","/*\n----------------------------------------\nget-link-tokens-from-bg()\n----------------------------------------\nGet accessible link colors for a given\nbackground color\nreturns: link-token, hover-token\nget-link-tokens-from-bg(\n  \"black\",\n  \"red-60\",\n  \"red-10\",\n  \"AA\")\n> \"red-10\", \"red-5\"\nget-link-tokens-from-bg(\n  \"black\",\n  \"red-60v\",\n  \"red-10v\",\n  \"AA-large\")\n> \"red-60v\", \"red-50v\"\nget-link-tokens-from-bg(\n  \"black\",\n  \"red-5v\",\n  \"red-60v\",\n  \"AA\")\n> \"red-5v\", \"white\"\nget-link-tokens-from-bg(\n  \"black\",\n  \"white\",\n  \"red-60v\",\n  \"AA\")\n> \"white\", \"white\"\n----------------------------------------\n*/\n\n@use \"sass:list\";\n@use \"sass:map\";\n@use \"sass:math\";\n@use \"sass:meta\";\n\n@use \"../../settings\" as *;\n@use \"../../tokens/color\" as *;\n@use \"../general/get-default\" as *;\n@use \"../general/str-split\" as *;\n@use \"../general/remove\" as *;\n@use \"get-color-token-from-bg\" as *;\n@use \"calculate-grade\" as *;\n@use \"decompose-color-token\" as *;\n@use \"is-accessible-magic-number\" as *;\n@use \"next-token\" as *;\n\n@function get-link-tokens-from-bg(\n  $bg-color: \"default\",\n  $preferred-link-token: \"default\",\n  $fallback-link-token: \"default\",\n  $wcag-target: \"AA\",\n  $context: false\n) {\n  $context-text: if($context, \"[#{$context}] \", \"\");\n  $is-default: false;\n  $is-default-preferred: false;\n  $is-default-fallback: false;\n  $default-reverse: false;\n  $default-standard: false;\n  @if $bg-color == \"default\" {\n    $bg-color: get-default(\"bg-color\");\n  }\n  @if $preferred-link-token == \"default\" {\n    $preferred-link-token: get-default(\"preferred-link-token\");\n    $default-reverse: true;\n  }\n  @if $fallback-link-token == \"default\" {\n    $fallback-link-token: get-default(\"fallback-link-token\");\n    $standard-reverse: true;\n  }\n  $bg-grade: calculate-grade($bg-color);\n  $preferred-hover-token: false;\n  $default-hover-token: false;\n  $accessible-hover-token: false;\n  $accessible-link-token: get-color-token-from-bg(\n    $bg-color,\n    $preferred-link-token,\n    $fallback-link-token,\n    $wcag-target,\n    $context,\n    $for: \"link\"\n  );\n  $accessible-link-grade: calculate-grade($accessible-link-token);\n  // Get the hover color token\n  // If link is lighter than bg set $is-reverse to true\n  $is-reverse: if($accessible-link-grade < $bg-grade, true, false);\n  // If using defaults, set the default hover\n  // $link-kind is used for error messaging\n  $link-kind: false;\n  @if $is-reverse {\n    @if $default-reverse {\n      $default-hover-token: $theme-link-reverse-hover-color;\n      $link-kind: \"default reverse\";\n    }\n  } @else if $default-standard {\n    $default-hover-token: $theme-link-hover-color;\n    $link-kind: \"default\";\n  }\n  @if $default-hover-token {\n    $default-hover-grade: calculate-grade($default-hover-token);\n    @if is-accessible-magic-number(\n      $default-hover-grade,\n      $bg-grade,\n      $wcag-target\n    )\n    {\n      $accessible-hover-token: $default-hover-token;\n    }\n    @if not $accessible-hover-token and $theme-show-compile-warnings {\n      @warn \"#{$context-text}The #{$link-kind} link hover (`#{$default-hover-token}`) does not have #{$wcag-target} contrast on a #{$bg-color} background. Please update your project settings.\";\n    }\n  }\n  @if not $accessible-hover-token {\n    $direction: if($is-reverse, \"lighter\", \"darker\");\n    $hover-token: next-token($accessible-link-token, $direction);\n    // Use the next token, if it is valid\n    @if $hover-token {\n      $accessible-hover-token: $hover-token;\n      // Otherwise use the token itself as hover, and warn.\n    } @else {\n      $accessible-hover-token: $accessible-link-token;\n      @if $theme-show-compile-warnings {\n        @warn \"#{$context-text}A `#{$accessible-hover-token}` link does not have #{$direction} hover available. Hover set to link color.\";\n      }\n    }\n  }\n  @return $accessible-link-token, $accessible-hover-token;\n}\n","@use \"sass:list\";\n@use \"sass:map\";\n\n@use \"decompose-color-token\" as *;\n@use \"luminance\" as *;\n@use \"calculate-grade\" as *;\n@use \"../../variables/luminance-grade-ranges\" as *;\n\n/*\n----------------------------------------\ntest-colors()\n----------------------------------------\nCheck to see if all system colors\nfall between the proper relative\nluminance range for their grade.\nHas a couple quirks, as the luminance()\nfunction returns slightly different\nresults than expected.\n----------------------------------------\n*/\n\n@function test-colors($map) {\n  $exceptions: \"black\", \"white\", \"transparent\", \"black-transparent\",\n    \"white-transparent\";\n\n  @each $token, $value in $map {\n    $family: list.nth(decompose-color-token($token), 1);\n    $grade: list.nth(decompose-color-token($token), 2);\n\n    @if not $value {\n      // empty block\n    } @else if not list.index($exceptions, $family) {\n      $computed: calculate-grade($value);\n      @debug \"Checked #{$family}-#{$grade}\";\n      @if $grade <= 5 {\n        // empty block\n      } @else if $computed != $grade {\n        @warn \"#{$token} (#{$value}) lum: #{luminance($value)} is not in the range #{map.get($system-color-grades, $grade)}\";\n      }\n    }\n  }\n\n  @return 1;\n}\n","@use \"sass:math\";\n@use \"sass:list\";\n@use \"../../functions/general\";\n\n/*\n----------------------------------------\ncolumns()\n----------------------------------------\noutputs a grid-col number based on\nthe number of desired columns in the\n12-column grid\n\nEx: columns(2) --> 6\n    grid-col(columns(2))\n----------------------------------------\n*/\n\n@function columns($number) {\n  $options: \"auto\", \"fill\";\n  $number: general.smart-quote($number);\n\n  @if list.index($options, $number) {\n    @return $number;\n  }\n  @if 12 % $number != 0 {\n    @error '`#{$number}` must be a divisor of 12.';\n  }\n  $columns: math.div(12, $number);\n  @return $columns;\n}\n\n// @debug columns(2);\n// @return 6;\n","/*\n----------------------------------------\nUSWDS Properties\n----------------------------------------\n*/\n\n@use \"sass:map\";\n@use \"sass:string\";\n\n@use \"./functions/general/map-collect\" as *;\n@use \"./functions/units/units\" as *;\n@use \"./functions/units/spacing-multiple\" as *;\n@use \"./functions/utilities/line-height\" as *;\n// TODO: ^^^ s/b \"functions/utilities/units\"\n\n// ? This file uses:\n// \"shortcodes-color-theme\";\n// \"shortcodes-color-state\";\n// \"shortcodes-color-basic\";\n// \"global\";\n// \"system-colors\";\n@use \"./tokens/color\" as *;\n\n@use \"./tokens/units/column-gaps\" as *;\n@use \"./tokens/units/spacing\" as *;\n@use \"./tokens/units/spacing-em\" as *;\n// TODO: ^^^ 'spacing'?\n\n@use \"./tokens/font/measure\" as *;\n// TODO: ^^^ 'typography'?\n\n@use \"./variables/border-radius\" as *;\n@use \"./variables/project-font-stacks\" as *;\n// TODO: ^^^ why 'project' and why not?\n\n@use \"./settings\" as *;\n\n$standard-colors: map-collect(\n  $tokens-color-theme,\n  $tokens-color-state,\n  $tokens-color-global\n);\n\n$extended-colors: map-collect($system-colors, $tokens-color-basic);\n\n$partial-values: (\n  zero-zero: (\n    0: 0,\n  ),\n  none: (\n    \"none\": none,\n  ),\n  auto: (\n    \"auto\": auto,\n  ),\n  full-percent: (\n    \"full\": 100%,\n  ),\n  full-viewport-height: (\n    \"viewport\": 100vh,\n  ),\n  full-viewport-width: (\n    \"viewport\": 100vw,\n  ),\n);\n\n$system-properties: (\n  align-items: (\n    standard: (\n      \"align-start\": flex-start,\n      \"align-end\": flex-end,\n      \"align-center\": center,\n      \"align-stretch\": stretch,\n      \"align-baseline\": baseline,\n    ),\n    extended: (),\n  ),\n  align-self: (\n    standard: (\n      \"align-self-start\": flex-start,\n      \"align-self-end\": flex-end,\n      \"align-self-center\": center,\n      \"align-self-stretch\": stretch,\n      \"align-self-baseline\": baseline,\n    ),\n    extended: (),\n  ),\n  background-color: (\n    standard: $standard-colors,\n    extended: $extended-colors,\n  ),\n  border: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($partial-values, \"zero-zero\"),\n        (\n          \"noValue\": 1px,\n        )\n      ),\n    extended: (),\n  ),\n  border-color: (\n    standard: $standard-colors,\n    extended: $extended-colors,\n  ),\n  border-radius: (\n    standard: $project-border-radius,\n    extended:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\")\n      ),\n  ),\n  border-style: (\n    standard: (\n      \"dashed\": dashed,\n      \"dotted\": dotted,\n      \"solid\": solid,\n    ),\n    extended: (),\n  ),\n  border-width: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($partial-values, \"zero-zero\")\n      ),\n    extended: (),\n  ),\n  bottom: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\"),\n        map.get($partial-values, \"full-percent\")\n      ),\n    extended: (),\n  ),\n  box-shadow: (\n    standard: (\n      \"none\": none,\n      1: 0 units(1px) units(0.5) 0 rgba(0, 0, 0, 0.1),\n      2: 0 units(0.5) units(1) 0 rgba(0, 0, 0, 0.1),\n      3: 0 units(1) units(2) 0 rgba(0, 0, 0, 0.1),\n      4: 0 units(1.5) units(3) 0 rgba(0, 0, 0, 0.1),\n      5: 0 units(2) units(4) 0 rgba(0, 0, 0, 0.1),\n    ),\n    extended: (),\n  ),\n  breakpoints: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"large\"),\n        map.get($system-spacing, \"larger\"),\n        map.get($system-spacing, \"largest\")\n      ),\n    extended: (),\n  ),\n  circle: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\")\n      ),\n    extended: (),\n  ),\n  color: (\n    standard: $standard-colors,\n    extended: $extended-colors,\n  ),\n  cursor: (\n    standard: (\n      \"auto\": auto,\n      \"default\": default,\n      \"pointer\": pointer,\n      \"wait\": wait,\n      \"move\": move,\n      \"not-allowed\": not-allowed,\n    ),\n    extended: (),\n  ),\n  display: (\n    standard: (\n      \"block\": block,\n      \"flex\": flex,\n      \"none\": none,\n      \"inline\": inline,\n      \"inline-block\": inline-block,\n      \"inline-flex\": inline-flex,\n      \"table\": table,\n      \"table-cell\": table-cell,\n      \"table-row\": table-row,\n    ),\n    extended: (),\n  ),\n  flex: (\n    standard: (\n      1: 1 1 0%,\n      2: 2 1 0%,\n      3: 3 1 0%,\n      4: 4 1 0%,\n      5: 5 1 0%,\n      6: 6 1 0%,\n      7: 7 1 0%,\n      8: 8 1 0%,\n      9: 9 1 0%,\n      10: 10 1 0%,\n      11: 11 1 0%,\n      12: 12 1 0%,\n      \"fill\": 1 1 0%,\n      \"auto\": 0 1 auto,\n    ),\n    extended: (),\n  ),\n  flex-direction: (\n    standard: (\n      \"row\": row,\n      \"column\": column,\n    ),\n    extended: (),\n  ),\n  flex-wrap: (\n    standard: (\n      \"wrap\": wrap,\n      \"no-wrap\": nowrap,\n    ),\n    extended: (),\n  ),\n  float: (\n    standard: (\n      \"left\": left,\n      \"none\": none,\n      \"right\": right,\n    ),\n    extended: (),\n  ),\n  font-family: (\n    standard: $project-font-stacks,\n    extended: (),\n  ),\n  font-feature-settings: (\n    standard: (\n      \"tabular\": string.unquote('\"tnum\" 1, \"kern\" 1'),\n      \"no-tabular\": string.unquote('\"kern\" 1'),\n    ),\n    extended: (),\n  ),\n  font-style: (\n    standard: (\n      \"italic\": italic,\n      \"no-italic\": normal,\n    ),\n    extended: (),\n  ),\n  font-weight: (\n    standard: (\n      \"thin\": $theme-font-weight-thin,\n      \"light\": $theme-font-weight-light,\n      \"normal\": normal,\n      \"medium\": $theme-font-weight-medium,\n      \"semibold\": $theme-font-weight-semibold,\n      \"bold\": $theme-font-weight-bold,\n      \"heavy\": $theme-font-weight-heavy,\n    ),\n    extended: (\n      100: 100,\n      200: 200,\n      300: 300,\n      400: 400,\n      500: 500,\n      600: 600,\n      700: 700,\n      800: 800,\n      900: 900,\n    ),\n  ),\n  gap: (\n    standard:\n      map-collect(\n        $system-column-gaps,\n        (\n          \"sm\": $theme-column-gap-sm,\n          \"md\": $theme-column-gap-md,\n          \"lg\": $theme-column-gap-lg,\n        )\n      ),\n    extended: (),\n  ),\n  height: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\"),\n        map.get($partial-values, \"full-percent\"),\n        map.get($partial-values, \"full-viewport-height\")\n      ),\n    extended: (),\n  ),\n  justify-content: (\n    standard: (\n      \"justify-center\": center,\n      \"justify-start\": flex-start,\n      \"justify-end\": flex-end,\n      \"justify\": space-between,\n    ),\n    extended: (),\n  ),\n  left: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\")\n      ),\n    extended: (),\n  ),\n  letter-spacing: (\n    standard: (\n      \"ls-auto\": initial,\n      \"ls-neg-3\": -0.03em,\n      \"ls-neg-2\": -0.02em,\n      \"ls-neg-1\": -0.01em,\n      \"ls-1\": 0.025em,\n      \"ls-2\": 0.1em,\n      \"ls-3\": 0.15em,\n    ),\n    extended: (),\n    function: (\n      \"auto\": initial,\n      -3: -0.03em,\n      -2: -0.02em,\n      -1: -0.01em,\n      1: 0.025em,\n      2: 0.1em,\n      3: 0.15em,\n    ),\n  ),\n  line-height: (\n    standard: (\n      \"sans-1\": lh(\"sans\", 1),\n      \"sans-2\": lh(\"sans\", 2),\n      \"sans-3\": lh(\"sans\", 3),\n      \"sans-4\": lh(\"sans\", 4),\n      \"sans-5\": lh(\"sans\", 5),\n      \"sans-6\": lh(\"sans\", 6),\n      \"serif-1\": lh(\"serif\", 1),\n      \"serif-2\": lh(\"serif\", 2),\n      \"serif-3\": lh(\"serif\", 3),\n      \"serif-4\": lh(\"serif\", 4),\n      \"serif-5\": lh(\"serif\", 5),\n      \"serif-6\": lh(\"serif\", 6),\n      \"mono-1\": lh(\"mono\", 1),\n      \"mono-2\": lh(\"mono\", 2),\n      \"mono-3\": lh(\"mono\", 3),\n      \"mono-4\": lh(\"mono\", 4),\n      \"mono-5\": lh(\"mono\", 5),\n      \"mono-6\": lh(\"mono\", 6),\n      \"cond-1\": lh(\"cond\", 1),\n      \"cond-2\": lh(\"cond\", 2),\n      \"cond-3\": lh(\"cond\", 3),\n      \"cond-4\": lh(\"cond\", 4),\n      \"cond-5\": lh(\"cond\", 5),\n      \"cond-6\": lh(\"cond\", 6),\n      \"heading-1\": lh(\"heading\", 1),\n      \"heading-2\": lh(\"heading\", 2),\n      \"heading-3\": lh(\"heading\", 3),\n      \"heading-4\": lh(\"heading\", 4),\n      \"heading-5\": lh(\"heading\", 5),\n      \"heading-6\": lh(\"heading\", 6),\n      \"ui-1\": lh(\"ui\", 1),\n      \"ui-2\": lh(\"ui\", 2),\n      \"ui-3\": lh(\"ui\", 3),\n      \"ui-4\": lh(\"ui\", 4),\n      \"ui-5\": lh(\"ui\", 5),\n      \"ui-6\": lh(\"ui\", 6),\n      \"body-1\": lh(\"body\", 1),\n      \"body-2\": lh(\"body\", 2),\n      \"body-3\": lh(\"body\", 3),\n      \"body-4\": lh(\"body\", 4),\n      \"body-5\": lh(\"body\", 5),\n      \"body-6\": lh(\"body\", 6),\n      \"code-1\": lh(\"code\", 1),\n      \"code-2\": lh(\"code\", 2),\n      \"code-3\": lh(\"code\", 3),\n      \"code-4\": lh(\"code\", 4),\n      \"code-5\": lh(\"code\", 5),\n      \"code-6\": lh(\"code\", 6),\n      \"alt-1\": lh(\"alt\", 1),\n      \"alt-2\": lh(\"alt\", 2),\n      \"alt-3\": lh(\"alt\", 3),\n      \"alt-4\": lh(\"alt\", 4),\n      \"alt-5\": lh(\"alt\", 5),\n      \"alt-6\": lh(\"alt\", 6),\n    ),\n    extended: (\n      1: 1,\n      2: 1.1,\n      3: 1.35,\n      4: 1.5,\n      5: 1.62,\n      6: 1.75,\n    ),\n  ),\n  margin: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium-negative\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing-em, \"small\"),\n        map.get($partial-values, \"zero-zero\")\n      ),\n    extended: (),\n  ),\n  margin-horizontal: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($system-spacing, \"medium-negative\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\"),\n        map.get($system-spacing-em, \"small\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\")\n      ),\n    extended: (),\n  ),\n  margin-vertical: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($system-spacing, \"medium-negative\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing-em, \"small\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\")\n      ),\n    extended: (),\n  ),\n  max-height: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\"),\n        map.get($system-spacing, \"larger\"),\n        map.get($partial-values, \"none\"),\n        map.get($partial-values, \"full-viewport-height\")\n      ),\n    extended: (),\n  ),\n  max-width: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\"),\n        map.get($system-spacing, \"larger\"),\n        map.get($system-spacing, \"largest\"),\n        map.get($partial-values, \"none\"),\n        map.get($partial-values, \"full-percent\")\n      ),\n    extended: (),\n  ),\n  measure: (\n    standard: (\n      1: $system-measure-smaller,\n      2: $system-measure-small,\n      3: $system-measure-base,\n      4: $system-measure-large,\n      5: $system-measure-larger,\n      6: $system-measure-largest,\n      \"none\": none,\n    ),\n    extended: (),\n  ),\n  min-height: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\"),\n        map.get($system-spacing, \"larger\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"full-percent\"),\n        map.get($partial-values, \"full-viewport-height\")\n      ),\n    extended: (),\n  ),\n  min-width: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($partial-values, \"zero-zero\")\n      ),\n    extended: (),\n  ),\n  opacity: (\n    standard: (\n      0: 0,\n      10: 0.1,\n      20: 0.2,\n      30: 0.3,\n      40: 0.4,\n      50: 0.5,\n      60: 0.6,\n      70: 0.7,\n      80: 0.8,\n      90: 0.9,\n      100: 1,\n    ),\n    extended: (),\n  ),\n  order: (\n    standard: (\n      \"first\": -1,\n      \"last\": 999,\n      \"initial\": initial,\n      0: 0,\n      1: 1,\n      2: 2,\n      3: 3,\n      4: 4,\n      5: 5,\n      6: 6,\n      7: 7,\n      8: 8,\n      9: 9,\n      10: 10,\n      11: 11,\n    ),\n    extended: (),\n  ),\n  outline: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($partial-values, \"zero-zero\"),\n        (\n          \"05\": spacing-multiple(0.5),\n        )\n      ),\n    extended: (),\n  ),\n  outline-color: (\n    standard: map-collect($tokens-color-global),\n    extended: $extended-colors,\n  ),\n  overflow: (\n    standard: (\n      \"hidden\": hidden,\n      \"scroll\": scroll,\n      \"auto\": auto,\n      \"visible\": visible,\n    ),\n    extended: (),\n  ),\n  padding: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($partial-values, \"zero-zero\")\n      ),\n    extended: (),\n  ),\n  position: (\n    standard: (\n      \"absolute\": absolute,\n      \"fixed\": fixed,\n      \"relative\": relative,\n      \"static\": static,\n      \"sticky\": sticky,\n    ),\n    extended: (),\n  ),\n  right: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\")\n      ),\n    extended: (),\n  ),\n  square: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\")\n      ),\n    extended: (),\n  ),\n  text-align: (\n    standard: (\n      \"center\": center,\n      \"left\": left,\n      \"justify\": justify,\n      \"right\": right,\n    ),\n    extended: (),\n  ),\n  text-decoration: (\n    standard: (\n      \"strike\": line-through,\n      \"underline\": underline,\n      \"no-underline\": none,\n      \"no-strike\": none,\n    ),\n    extended: (),\n  ),\n  text-decoration-color: (\n    standard: map-collect($standard-colors, map.get($partial-values, \"auto\")),\n    extended: $extended-colors,\n  ),\n  text-indent: (\n    standard:\n      map-collect(\n        map.get($partial-values, \"zero-zero\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"medium-negative\")\n      ),\n    extended: (),\n  ),\n  text-transform: (\n    standard: (\n      \"uppercase\": uppercase,\n      \"no-uppercase\": none,\n      \"lowercase\": lowercase,\n      \"no-lowercase\": none,\n    ),\n    extended: (),\n  ),\n  top: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"smaller-negative\"),\n        map.get($system-spacing, \"small-negative\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"auto\")\n      ),\n    extended: (),\n  ),\n  vertical-align: (\n    standard: (\n      \"baseline\": baseline,\n      \"bottom\": bottom,\n      \"middle\": middle,\n      \"sub\": sub,\n      \"super\": super,\n      \"tbottom\": text-bottom,\n      \"ttop\": text-top,\n      \"top\": top,\n    ),\n    extended: (),\n  ),\n  white-space: (\n    standard: (\n      \"pre\": pre,\n      \"pre-line\": pre-line,\n      \"pre-wrap\": pre-wrap,\n      \"wrap\": normal,\n      \"no-wrap\": nowrap,\n    ),\n    extended: (),\n  ),\n  width: (\n    standard:\n      map-collect(\n        map.get($system-spacing, \"smaller\"),\n        map.get($system-spacing, \"small\"),\n        map.get($system-spacing, \"medium\"),\n        map.get($system-spacing, \"large\"),\n        map.get($system-spacing, \"larger\"),\n        map.get($system-spacing, \"largest\"),\n        map.get($partial-values, \"zero-zero\"),\n        map.get($partial-values, \"full-percent\"),\n        map.get($partial-values, \"auto\")\n      ),\n    extended: (),\n  ),\n  z-index: (\n    standard: (\n      \"auto\": auto,\n      \"bottom\": -100,\n      \"top\": 99999,\n      0: 0,\n      100: 100,\n      200: 200,\n      300: 300,\n      400: 400,\n      500: 500,\n    ),\n    extended: (),\n  ),\n);\n","@use \"sass:list\";\n@use \"sass:meta\";\n@use \"sass:map\";\n@use \"sass:math\";\n@use \"../../functions/output/number-to-token\" as *;\n@use \"../../functions/general/smart-quote\" as *;\n@use \"../../functions/general/map-deep-get\" as *;\n@use \"../../properties\" as *;\n@use \"../../settings\" as *;\n\n/*\n----------------------------------------\nget-uswds-value()\n----------------------------------------\nFinds and outputs a value from the\nUSWDS standard values.\n\nUsed to build other standard utility\nfunctions and mixins.\n----------------------------------------\n*/\n\n@function get-uswds-value($property, $value...) {\n  @if meta.type-of($value) == \"arglist\" and list.nth($value, 1) == override {\n    @return list.nth($value, 2);\n  }\n\n  $value: list.nth($value, 1);\n  $converted: number-to-token($value);\n  $quoted-value: if(\n    $converted,\n    smart-quote($converted),\n    smart-quote(list.nth($value, 1))\n  );\n  $our-standard-values: map-deep-get($system-properties, $property, standard);\n  $our-extended-values: map-deep-get($system-properties, $property, extended);\n\n  @if map.has-key($our-standard-values, $quoted-value) {\n    $output: map.get($our-standard-values, $quoted-value);\n\n    @if not $output {\n      @if $theme-show-compile-warnings {\n        @error '`#{$value}` is set as a `false` value '\n          + 'for the #{$property} property in your project settings '\n          + 'and will not output properly. '\n          + 'Set the value of `#{$value}` in project settings.';\n      }\n    }\n\n    @return $output;\n  }\n\n  @if map.has-key($our-extended-values, $quoted-value) {\n    @if $theme-show-compile-warnings {\n      @warn '`#{$value}` is an extended USWDS `#{$property}` token. '\n        + 'This is OK, but only components built with standard tokens can be accepted back into the system. '\n        + 'Standard `#{$property}` values: #{map.keys($our-standard-values)}';\n    }\n\n    @return map.get($our-extended-values, $quoted-value);\n  }\n\n  // TODO: what are these last two cases? Evaluate.\n  @if not((meta.type-of($value) == \"number\") and not(math.is-unitless($value)))\n  {\n    @error '`#{$value}` is not a valid `#{$property}` token. '\n      + 'You should correct this. Standard `#{$property}` tokens: '\n      + ' #{map.keys($our-standard-values)}';\n  }\n\n  @if $theme-show-compile-warnings {\n    @warn '`#{$value}` is not a USWDS `#{$property}` token. '\n      + 'This is OK, but only components built with standard '\n      + 'tokens can be accepted back into the system. '\n      + 'Standard `#{$property}` values: #{map.keys($our-standard-values)}';\n  }\n\n  @return $value;\n}\n","@use \"../../functions/general/map-deep-get\" as *;\n@use \"../../properties\" as *;\n\n/*\n----------------------------------------\nget-standard-values()\n----------------------------------------\nGets a map of USWDS standard values\nfor a property\n----------------------------------------\n*/\n\n@function get-standard-values($property) {\n  @return map-deep-get($system-properties, $property, standard);\n}\n\n// @debug get-standard-values(\"measure\");\n// @return (1: 44ex, 2: 60ex, 3: 64ex, 4: 68ex, 5: 72ex, 6: 88ex, \"none\": none);\n","@use \"sass:map\";\n@use \"sass:meta\";\n@use \"../../functions/general/smart-quote\" as *;\n@use \"../../functions/general/error-not-token\" as *;\n@use \"../../functions/output/get-uswds-value\" as *;\n@use \"../../functions/font/normalize-type-scale\" as *;\n@use \"../../variables/border-radius\" as *;\n@use \"../../variables/project-cap-heights\" as *;\n@use \"../../variables/type-scale\" as *;\n@use \"../../properties\" as *;\n\n/*\n----------------------------------------\nborder-radius()\n----------------------------------------\nGet a border-radius from the system\nborder-radii\n----------------------------------------\n*/\n\n@function border-radius($value) {\n  @if map.has-key($all-border-radius, $value) {\n    @return map.get($all-border-radius, $value);\n  } @else {\n    @return error-not-token($value, \"border radius\", $all-border-radius);\n  }\n}\n\n// @debug #{border-radius(2)};\n// @return 1rem;\n\n/*\n----------------------------------------\nfont-weight()\nfw()\n----------------------------------------\nGet a font-weight value from the\nsystem font-weight\n----------------------------------------\n*/\n\n@function font-weight($value) {\n  @return get-uswds-value(font-weight, $value);\n}\n\n@function fw($value) {\n  @return font-weight($value);\n}\n\n// @debug #{font-weight(\"light\")};\n// @return 300;\n\n/*\n----------------------------------------\nfeature()\n----------------------------------------\nGets a valid USWDS font feature setting\n----------------------------------------\n*/\n\n@function feature($value) {\n  @return get-uswds-value(font-feature-settings, $value);\n}\n\n// @debug #{feature(\"tabular\")};\n// @return \"tnum\" 1, \"kern\" 1;\n\n/*\n----------------------------------------\nflex()\n----------------------------------------\nGets a valid USWDS flex value\n----------------------------------------\n*/\n\n@function flex($value) {\n  @return get-uswds-value(flex, $value);\n}\n\n// @debug #{flex(11)};\n// @return 11 1 0%;\n\n/*\n----------------------------------------\nfont-family()\nfamily()\n----------------------------------------\nGet a font-family stack from a\nrole-based or type-based font family\n----------------------------------------\n*/\n\n@function font-family($value) {\n  @return get-uswds-value(font-family, $value);\n}\n\n@function ff($value) {\n  @return font-family($value);\n}\n\n@function family($value) {\n  @return font-family($value);\n}\n\n// @debug #{font-family(\"sans\")};\n// @return Source Sans Pro Web, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif\n\n/*\n----------------------------------------\nletter-spacing()\nls()\n----------------------------------------\nGet a letter-spacing value from the\nsystem letter-spacing\n----------------------------------------\n*/\n\n@function letter-spacing($value) {\n  $lh-map: map.get($system-properties, \"letter-spacing\");\n  $fn-map: map.get($lh-map, function);\n  @if map.has-key($fn-map, $value) {\n    @return map.get($fn-map, $value);\n  }\n  @if meta.type-of($value) == \"number\" {\n    @error '`#{$value}` is a not a valid letter-spacing token. '\n      + 'Valid letter-spacing tokens: #{map.keys($fn-map)}';\n  }\n  @return get-uswds-value(\"letter-spacing\", $value);\n}\n\n@function ls($value) {\n  @return letter-spacing($value);\n}\n\n// @debug #{letter-spacing(\"ls-3\")};\n// @return 0.15em;\n\n/*\n----------------------------------------\nmeasure()\n----------------------------------------\nGets a valid USWDS reading line length\n----------------------------------------\n*/\n\n@function measure($value) {\n  @return get-uswds-value(measure, $value);\n}\n\n// @debug #{measure(2)};\n// @return 60ex;\n\n/*\n----------------------------------------\nopacity()\n----------------------------------------\nGet an opacity from the system\nopacities\n----------------------------------------\n*/\n\n@function opacity($value) {\n  @return get-uswds-value(opacity, $value);\n}\n\n// @debug #{opacity(30)};\n// @return 0.3;\n\n/*\n----------------------------------------\norder()\n----------------------------------------\nGet an order value from the\nsystem orders\n----------------------------------------\n*/\n\n@function order($value) {\n  @return get-uswds-value(order, $value);\n}\n\n// @debug #{order(last)};\n// @return 999;\n\n/*\n----------------------------------------\nradius()\n----------------------------------------\nGet a border-radius value from the\nsystem letter-spacing\n----------------------------------------\n*/\n\n@function radius($value) {\n  @return get-uswds-value(border-radius, $value);\n}\n\n// @debug #{radius(lg)};\n// @return 0.5rem;\n\n/*\n----------------------------------------\nfont-size()\n----------------------------------------\nGet type scale value from a [family] and\n[scale]\n----------------------------------------\n*/\n\n@function font-size($family, $scale, $force: false) {\n  $our-family: smart-quote($family);\n  $our-scale: smart-quote($scale);\n\n  @if not(map.has-key($project-cap-heights, $our-family)) {\n    @return error-not-token($our-family, \"font family\", $project-cap-heights);\n  }\n  @if not(map.get($all-type-scale, $our-scale)) {\n    @return error-not-token($our-scale, \"font scale\", $all-type-scale);\n  }\n\n  $this-cap: map.get($project-cap-heights, $our-family);\n  $this-scale: map.get($all-type-scale, $our-scale);\n\n  @if not $force {\n    @if not($this-scale and $this-cap) {\n      @error 'The scale `#{$our-scale}` is disabled '\n        + 'in your project\\'s theme settings. '\n        + 'Set its value to `true` to use this family.';\n    }\n  }\n\n  @return normalize-type-scale($this-cap, $this-scale);\n}\n\n@function fs($family, $scale) {\n  @return font-size($family, $scale);\n}\n\n@function size($family, $scale) {\n  @return font-size($family, $scale);\n}\n\n// @debug #{font-size(\"serif\", \"3xs\")};\n// @return  0.79rem;\n\n// @debug #{font-size(\"serif\", \"4xs\")};\n// @return 4xs is not a valid USWDS font scale token\n\n/*\n----------------------------------------\nz-index()\nz()\n----------------------------------------\nGet a z-index value from the\nsystem z-index\n----------------------------------------\n*/\n\n@function z-index($value) {\n  @return get-uswds-value(z-index, $value);\n}\n\n@function z($value) {\n  @return z-index($value);\n}\n\n// @debug #{z(\"top\")};\n// @return 99999;\n","@use \"sass:map\";\n@use \"sass:meta\";\n@use \"../../functions/general/smart-quote\" as *;\n@use \"../../functions/general/error-not-token\" as *;\n@use \"../../functions/font/normalize-type-scale\" as *;\n@use \"../../variables/project-cap-heights\" as *;\n@use \"../../variables/type-scale\" as *;\n\n/*\n----------------------------------------\nutility-font()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\nNot the public-facing function.\nUsed for building the utilities and\nwithholds certain errors.\n----------------------------------------\n*/\n\n@function utility-font($family, $scale) {\n  @if not(map.has-key($project-cap-heights, $family)) {\n    @return error-not-token($family, \"font family\", $project-cap-heights);\n  }\n\n  $quote-scale: smart-quote($scale);\n  @if not(map.get($all-type-scale, $quote-scale)) {\n    @return error-not-token($scale, \"font scale\", $all-type-scale);\n  }\n\n  $this-cap: map.get($project-cap-heights, $family);\n  $this-scale: map.get($all-type-scale, $quote-scale);\n\n  @if not $this-scale and $this-cap {\n    @return false;\n  }\n\n  @return normalize-type-scale($this-cap, $this-scale);\n}\n\n// @debug utility-font(\"cond\", \"2xs\");\n// @return false;\n\n// @debug utility-font(\"sans\", \"sm\");\n// @return 1.06rem;\n","@use \"../../functions\" as *;\n\n/*\n----------------------------------------\nfamily()\n----------------------------------------\nGet a font-family stack\n----------------------------------------\n*/\n\n@mixin u-font-family($family) {\n  font-family: ff($family);\n}\n\n/*\n----------------------------------------\nsize()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n\n@mixin u-font-size($family, $scale) {\n  font-size: font-size($family, $scale);\n}\n\n/*\n----------------------------------------\nfont()\n----------------------------------------\nGet a font-family stack\nAND\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n\n@mixin u-font($family, $scale) {\n  font-family: ff($family);\n  font-size: font-size($family, $scale);\n}\n","@use \"sass:meta\";\n@use \"sass:list\";\n@use \"../general/focus-outline\" as *;\n@use \"../../functions\" as *;\n@use \"../../mixins/utilities\" as *;\n@use \"../../mixins/general/focus-outline\" as *;\n@use \"../../settings\" as *;\n\n/*\n----------------------------------------\ntypeset()\n----------------------------------------\nSets:\n- family\n- size\n- line-height\n----------------------------------------\n*/\n\n@mixin typeset(\n  $family: $theme-body-font-family,\n  $scale: $theme-body-font-size,\n  $line-height: $theme-body-line-height\n) {\n  @if meta.type-of($family) == \"list\" {\n    $list: $family;\n    $family: if(list.nth($list, 1), list.nth($list, 1), null);\n    $scale: if(list.nth($list, 2), list.nth($list, 2), null);\n    $line-height: if(list.nth($list, 3), list.nth($list, 3), null);\n  }\n  $family: if($family == null, $theme-body-font-family, $family);\n  $scale: if($scale == null, $theme-body-font-size, $scale);\n  $line-height: if($line-height == null, $theme-body-line-height, $line-height);\n  @include u-font($family, $scale);\n  @include u-line-height($family, $line-height);\n}\n\n@mixin typeset-heading-base {\n  @include u-margin-y(0);\n  clear: both;\n}\n\n@mixin typeset-heading {\n  @include typeset-heading-base;\n\n  * + & {\n    margin-top: $theme-heading-margin-top;\n  }\n\n  + * {\n    margin-top: $theme-paragraph-margin-top;\n  }\n}\n\n@mixin typeset-p-base {\n  line-height: line-height($theme-body-font-family, $theme-body-line-height);\n  max-width: measure($theme-text-measure);\n}\n\n// typeset element mixins\n@mixin typeset-p {\n  @include typeset-p-base;\n  @include u-margin-y(0);\n\n  * + & {\n    margin-top: $theme-paragraph-margin-top;\n  }\n\n  + * {\n    margin-top: $theme-paragraph-margin-top;\n  }\n}\n\n@mixin typeset-link {\n  color: color($theme-link-color);\n  text-decoration: underline;\n\n  &:visited {\n    color: color($theme-link-visited-color);\n  }\n\n  &:hover {\n    color: color($theme-link-hover-color);\n  }\n\n  &:active {\n    color: color($theme-link-active-color);\n  }\n\n  &:focus {\n    @include focus-outline;\n  }\n}\n","/* stylelint-disable max-nesting-depth */\n\n@use \"sass:map\";\n@use \"sass:meta\";\n@use \"sass:string\";\n@use \"sass:list\";\n\n@use \"../settings\" as *;\n@use \"../properties\" as *;\n@use \"../functions\" as *;\n@use \"../variables/separator\" as *;\n@use \"./helpers\" as *;\n\n/*\n----------------------------------------\n@render-pseudoclass\n----------------------------------------\nBuild a pseucoclass utiliy from values\ncalculated in the @render-utilities-in\nloop\n----------------------------------------\n*/\n\n@mixin render-pseudoclass(\n  $utility,\n  $pseudoclass,\n  $selector,\n  $property,\n  $value,\n  $media-prefix\n) {\n  $important: if($utilities-use-important, \" !important\", null);\n  $this-mq: null;\n\n  .#{$media-prefix}#{$pseudoclass}#{$separator}#{ns(\"utility\")}#{$selector}:#{$pseudoclass} {\n    @each $this-property in $property {\n      #{$this-property}: string.unquote(\"#{$value}#{$important}\");\n    }\n  }\n}\n\n// utility-feature? utility-property\n@mixin add-utility-declaration($declaration, $utility-type, $important) {\n  @each $ext-prop, $ext-value in map.get($declaration, $utility-type) {\n    #{$ext-prop}: string.unquote(\"#{$ext-value}#{$important}\");\n  }\n}\n\n/*\n----------------------------------------\n@render-utility\n----------------------------------------\nBuild a utility from values calculated\nin the @render-utilities-in loop\n----------------------------------------\nTODO: Determine the proper use of\nunquote() in the following. Changed to\naccount for a 'interpolation near\noperators will be simplified in a\nfuture version of Sass' warning.\n----------------------------------------\n*/\n\n@mixin render-utility(\n  $utility,\n  $selector,\n  $property,\n  $value,\n  $val-props,\n  $media-key\n) {\n  $important: if($utilities-use-important, \" !important\", null);\n  $media-prefix: null;\n  $value-is-map: if(meta.type-of($val-props) == \"map\", true, false);\n\n  @if $media-key {\n    $media-prefix: #{$media-key}#{$separator};\n  }\n\n  .#{$media-prefix}#{ns(\"utility\")}#{$selector} {\n    @if $value-is-map and map.has-key($val-props, extend) {\n      @include add-utility-declaration($val-props, extend, $important);\n    }\n\n    @if $value-is-map and map.has-key($val-props, extends) {\n      @extend %#{map.get($val-props, extends)};\n    }\n\n    @each $this-property in $property {\n      #{$this-property}: string.unquote(\"#{$value}#{$important}\");\n    }\n\n    @if map.has-key($utility, extend) {\n      @include add-utility-declaration($utility, extend, $important);\n    }\n  }\n\n  // Add the pseudoclass variants, if applicable\n\n  @if map-deep-get($utility, settings, hover) {\n    @include render-pseudoclass(\n      $utility,\n      hover,\n      $selector,\n      $property,\n      $value,\n      $media-prefix\n    );\n  }\n\n  @if map-deep-get($utility, settings, active) {\n    @include render-pseudoclass(\n      $utility,\n      active,\n      $selector,\n      $property,\n      $value,\n      $media-prefix\n    );\n  }\n\n  @if map-deep-get($utility, settings, visited) {\n    @include render-pseudoclass(\n      $utility,\n      visited,\n      $selector,\n      $property,\n      $value,\n      $media-prefix\n    );\n  }\n\n  @if map-deep-get($utility, settings, focus) {\n    @include render-pseudoclass(\n      $utility,\n      focus,\n      $selector,\n      $property,\n      $value,\n      $media-prefix\n    );\n  }\n}\n\n/*\n----------------------------------------\n@render-utilities-in\n----------------------------------------\nThe master loop that sets the building\nblocks of utilities from the values\nin individual rule settings and loops\nthrough all possible variants\n----------------------------------------\n*/\n\n@mixin these-utilities($utilities, $media-key: false) {\n  // loop through the $utilities\n  @each $utility-name, $utility in $utilities {\n    // Check to see if the utility is in the output uselist\n    @if ($output-these-utilities == \"default\") or\n      list.index($output-these-utilities, $utility-name)\n    {\n      // Only do this if the the utility is meant to output\n      @if not($media-key) or\n        ($media-key and map-deep-get($utility, settings, responsive))\n      {\n        @if map-deep-get($utility, settings, output) {\n          // set intital variants\n          // $property-default is a single value for all these utilities\n\n          $base-props: null;\n          $modifier: null;\n          $selector: null;\n          $property-default: map.get($utility, property);\n          $property: null;\n          $value: null;\n          $our-modifiers: ();\n          $b: null;\n          $v: null;\n          $mv: null;\n          $val-props: ();\n          $no-value: false;\n\n          $b: map.get($utility, base);\n\n          // Each utility rule takes a value, so let's start here\n          // and begin building.\n\n          // -------- For each value in utility.values ----------\n\n          @each $val-key, $val-value in map.get($utility, values) {\n            // If $val-value == null, or if $val-value is a map and\n            // the content key or the dependency key has a null value\n            // set $val-value to `false`...\n\n            @if meta.type-of($val-value) == \"map\" {\n              @if not map.get($val-value, content) {\n                $val-value: false;\n              } @else if\n                map.has-key($val-value, dependency) and not\n                map.get($val-value, dependency)\n              {\n                $val-value: false;\n              }\n            }\n\n            // ...so we can skip building this rule altogether.\n            // So, if $val-value is _not_ false...\n\n            @if $val-value {\n              // Set the value of our rule.\n              // If its a map, use val-value.content.\n\n              $val-slug: if(\n                meta.type-of($val-value) == \"map\",\n                map.get($val-value, \"slug\"),\n                $val-key\n              );\n\n              $value: if(\n                meta.type-of($val-value) == \"map\",\n                map.get($val-value, \"content\"),\n                $val-value\n              );\n\n              @if $val-slug == \"\" or smart-quote($val-slug) == \"noValue\" {\n                $no-value: true;\n              }\n\n              // Add any appended values...\n\n              @if map.get($utility, valueAppend) {\n                $value: $value + map.get($utility, valueAppend);\n              }\n\n              // ...or prepended values.\n\n              @if map.get($utility, valuePrepend) {\n                $value: map.get($utility, valuePrepend) + $value;\n              }\n\n              // And we'll set the $v as $val-slug for use in\n              // constructing the selector (.$b-$m-$v).\n\n              $v: $val-slug;\n\n              // -------- Start of Modifiers ----------\n\n              // Now we'll check for modifiers and loop through them\n              // to get the props we need to build our rule.\n\n              // Modifiers are held in a MAP,\n              // where each individual modifer has the keypair\n              // [slug]:[value]\n\n              // So, check for modifiers.\n\n              @if map.get($utility, modifiers) {\n                // If there are modifiers, capture them as $our-modifiers.\n\n                $our-modifiers: map.get($utility, modifiers);\n              } @else {\n                // If there aren't, build a dummy so we can keep\n                // all our build in the same loop.\n\n                $our-modifiers: (\n                  \"slug\": null,\n                );\n              }\n\n              // OK! C'mon, let's loop!\n              // https://www.youtube.com/watch?v=X9i2i07wPUw\n\n              // -------- For each modifier in $our-modifiers ----------\n\n              @each $mod-key, $mod-val in $our-modifiers {\n                $property: if(\n                  $mod-val == null or $mod-val == \"\",\n                  $property-default,\n                  multi-cat($property-default, $mod-val)\n                );\n\n                // Now we go through to set the $selector.\n\n                // If mod-props.slug is noModifier...\n\n                @if $mod-key ==\n                  \"\" or\n                  $mod-key ==\n                  slug or\n                  smart-quote($mod-key) ==\n                  \"noModifier\"\n                {\n                  // First, we can test to see if the base $b is null\n\n                  @if not $b {\n                    // If it _is_ null, the rule's selector is $v.\n\n                    $selector: $v;\n\n                    // if the value is noValue ('')\n                  } @else if $no-value {\n                    // selector is the base only\n\n                    $selector: $b;\n                  } @else {\n                    // otherwise, selctor is joined with a hyphen.\n\n                    $selector: $b + \"-\" + $v;\n\n                    // Nice! We just took care of the non-modifier cases!\n                  }\n                }\n\n                // If there _is_ a modifier...\n\n                @else {\n                  $mv: if($no-value, $mod-key, $mod-key + \"-\" + $v);\n\n                  // Once we have $mv, test for $b\n                  // and build the selector as before.\n\n                  $selector: if($b == null, $mv, $b + \"-\" + $mv);\n                }\n\n                // finished setting modifier vars\n\n                // Hey. Did we just finish $selector?\n                // And do we also have $property and $value?\n                // We do?!?!?! We do!\n\n                // FINALLY, 'BUILD THE RULE, MAX!'\n                // https://www.youtube.com/watch?v=R3Igz5SfBCE\n\n                @include render-utility(\n                  $utility,\n                  $selector,\n                  $property,\n                  $value,\n                  $val-value,\n                  $media-key\n                );\n              } // end the modifier loop\n            } // end the null value conditional\n          } // end the value loop\n        } // end the output conditional\n      }\n    } // end the uselist conditional\n  } // end the utility loop\n  // (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧\n}\n\n@mixin render-utilities-in($utilities) {\n  @include these-utilities($utilities);\n\n  $our-breakpoints: map-deep-get($system-properties, breakpoints, standard);\n  @each $media-key, $media-value in $our-breakpoints {\n    @if map.get($theme-utility-breakpoints-complete, $media-key) {\n      @include at-media($media-key) {\n        @include these-utilities($utilities, $media-key);\n      }\n    }\n  }\n}\n\n/* stylelint-enable */\n","/*  notifications.scss\n    ---\n    Adds a notification at the top of each USWDS\n    compile. Use this file for important notifications\n    and updates to the design system.\n\n    This file should started fresh at each\n    major version.\n\n*/\n\n@use \"settings\" as *;\n\n/* prettier-ignore */\n$uswds-notifications:\n  \"\\A\"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A \\2709  USWDS Notifications\"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A 3.0.0\"\n+ \"\\A - Settings: We deprecated the $output-all-utilities setting.\"\n+ \"\\A   Control utility output with $output-these-utilities.\"\n+ \"\\A   See designsystem.digital.gov/documentation/settings for more.\"\n+ \"\\A \"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A 3.1.0\"\n+ \"\\A - Accessibility: We added `type='button'` to all buttons that\"\n+ \"\\A   do not submit a form. All your non-form project buttons will\"\n+ \"\\A   need `type='button'`.\"\n+ \"\\A - Accessibility: We updated the markup in the usa-password package\"\n+ \"\\A   to use a <button> element instead of an anchor element.\"\n+ \"\\A - Accessibility: Elements that get `aria-disabled` instead of\"\n+ \"\\A   `disabled` are now styled as disabled.\"\n+ \"\\A - Compatibility: We're using some CSS selectors not supported\"\n+ \"\\A   by IE11.\"\n+ \"\\A - Deprecated: We deprecated the embed-container() mixin.\"\n+ \"\\A - Display: We removed the outline circle from social media icons.\"\n+ \"\\A - Settings: We changed the default value of $theme-hero-image.\"\n+ \"\\A   Teams that use the default image (hero.png) will need to get the\"\n+ \"\\A   new image (hero.jpg) from the distribution package.\"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A 3.2.0\"\n+ \"\\A - Accessibility: We changed `div.usa-identifier__identity` to \"\n+ \"\\A   `section.usa-identifier__identity` (we changed the div to a \"\n+ \"\\A   section) so the ARIA label is associated with an non-div element.\"\n+ \"\\A - Accessibility: We updated the aria-label in English versions of\"\n+ \"\\A   section.usa-banner to 'Official website of the United States \"\n+ \"\\A   government' to reduce ambiguity in screen reader vocalizations. \"\n+ \"\\A   Previously, 'An official' could be misunderstood as 'unofficial'.\"\n+ \"\\A - Accessibility: We added `aria-hidden='true'` to the parent div \"\n+ \"\\A   of `p.usa-banner__header-text` in usa-banner. We also \"\n+ \"\\A   removed `aria-hidden='true'` from `p.usa-banner__header-action`. \"\n+ \"\\A   Together these assure that the proper elements are read in the\"\n+ \"\\A   banner.\"\n+ \"\\A - Accessibility: In the lock icon SVG in usa-banner, we changed the \"\n+ \"\\A   value of aria-labelledby to  \"\n+ \"\\A   `aria-labelledby='banner-lock-description'` and updated the value\"\n+ \"\\A   of desc#banner-lock-description to `'Locked padlock'` to simplify\"\n+ \"\\A   the vocalization.\"\n+ \"\\A - Accessibility: We added `aria-hidden='true' to \"\n+ \"\\A   `img.usa-banner__header-flag` in usa-banner since this is a\"\n+ \"\\A   decorative image.\"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A 3.4.0\"\n+ \"\\A - Compatibility: We no longer include ttf and woff fonts in our \"\n+ \"\\A   @font-face rules. If you need these files for IEll compatibility,\"\n+ \"\\A   add `$theme-font-browser-compatibility: true` to your project\"\n+ \"\\A   settings.\"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A 3.5.0\"\n+ \"\\A - Sass: Removed `usa-prose-` mixins and placeholders from Sass.\"\n+ \"\\A   This is a breaking change only if your project Sass uses \"\n+ \"\\A   `usa-prose-` mixins and placeholders. Users should instead use \"\n+ \"\\A   `typeset-` mixins in their place.\"\n+ \"\\A - Settings: Now adjusting a single Sass map setting will no \"\n+ \"\\A   longer set all other values in the map to `false`. Users can\"\n+ \"\\A   now update only the map values they wish to change. This is a \"\n+ \"\\A   breaking change only if your project deactivated mapped \"\n+ \"\\A   settings by not declaring them.\"\n+ \"\\A - Accessibility: [form controls] We improved the consistency and \"\n+ \"\\A   visibility of disabled styles. Teams should check disabled form \"\n+ \"\\A   elements to assure that the new styles are working in their \"\n+ \"\\A   layouts.\"\n+ \"\\A - Accessibility: [usa-pagination] Replace the \"\n+ \"\\A   `role=\\\"presentation\\\"` with `aria-label=\\\"ellipsis indicating \"\n+ \"\\A   non-visible pages\\\" in `usa-pagination__overflow` items.\"\n+ \"\\A - Accessibility: [usa-card] Use link elements in\"\n+ \"\\A   any card component for calls to action instead of buttons. Use \"\n+ \"\\A   `<a href=\\\"#\\\" class=\\\"usa-button\\\"></a>` for these \"\n+ \"\\A   call-to-action links.\"\n+ \"\\A - Content: [usa-identifier] We updated the accessibility statement\"\n+ \"\\A   link text. Use the text \\\"Accessibility statement\\\" (EN) \"\n+ \"\\A   or \\\"Declaración de accesibilidad\\\" (ES) for the required \"\n+ \"\\A   link to an accessibility statement.\"\n+ \"\\A - Guidance [usa-link]: We now suggest using the `rel=\\\"noreferrer\\\"`\"\n+ \"\\A   property on external links. This prevents the browser from leaking \"\n+ \"\\A   information about the original web address.\"\n+ \"\\A - Guidance [usa-form]: We now suggest identifying both required \"\n+ \"\\A   and optional fields in forms. Label required fields with a red\"\n+ \"\\A   asterisk and optional fields with the word \\\"optional\\\".\"\n+ \"\\A \";\n\n/* prettier-ignore */\n$uswds-notification-disable-message:\n  \"\\A\"\n+ \"\\A --------------------------------------------------------------------\"\n+ \"\\A These are notifications from the USWDS team, not necessarily a\"\n+ \"\\A problem with your code.\"\n+ \"\\A\"\n+ \"\\A Disable notifications using `$theme-show-notifications: false`.\"\n+ \"\\A --------------------------------------------------------------------\\A\";\n\n@if $theme-show-notifications {\n  @warn \"#{$uswds-notifications}\"\n    + \"#{$uswds-notification-disable-message}\";\n}\n","/*\n----------------------------------------\nUSWDS with settings overrides\n----------------------------------------\nUncomment the following lines and add a list of changed settings\nin the form $setting: value,\n----------------------------------------\n*/\n\n@use \"uswds-core\" with (\n  $theme-show-compile-warnings: false,\n  $theme-show-notifications: false,\n  $theme-image-path: '/themes/custom/acusv2/dist/uswds/img',\n  // $theme-color-base-family: 'red',\n  // $theme-color-base-lightest: 'red-cool-60',\n  // $theme-color-base-lighter: 'red-cool-90',\n  // $theme-color-base-light: 'red-cool-60',\n  // $theme-color-base: 'red-cool-60',\n  // $theme-color-base-dark: 'red-cool-60',\n  // $theme-color-base-darker: 'red-cool-60',\n  // $theme-color-base-darkest: 'red-cool-60',\n  // $theme-color-base-ink: 'red-cool-60',\n  $theme-grid-container-max-width: \"widescreen\",\n  $theme-banner-max-width: \"widescreen\",\n  $theme-header-max-width: \"widescreen\",\n  $theme-footer-max-width: \"widescreen\",\n  $theme-font-path: '/themes/custom/acusv2/dist/uswds/fonts',\n  $theme-respect-user-font-size: true,\n  $theme-font-type-sans: 'public-sans',\n  $theme-font-type-serif: 'merriweather',\n);\n","@forward \"../../sass/uswds/settings\";\n@use \"uswds-core\" as *;\n\n/* Breakpoint where tabs switch between vertical and horizontal layouts. */\n$tabs-layout-switch: #{'min-width: 1000px'};\n\n.tabs {\n  --tabs-height: var(--spacing-xxl);\n  --tabs-padding-inline: var(--spacing-lg);\n  --tabs-active-border-size: var(--spacing-xxs);\n  --tabs-highlight-color: #{color('primary')};\n  --tabs-text-color: #{color('base-darker')};\n  --tabs-text-color-active: #{color('primary')};\n  --tabs-letter-spacing: revert;\n  --tabs-font-size: #{size('body', 'sm')};\n  --tabs-background-color: #{color('base-lightest')};\n  --tabs-background-color-hover: #{color('base-lighter')};\n  --tabs-border-width: 1px;\n  --tabs-border-color: #{color('base-lighter')};\n  --tabs-transition-duration: 0.2s;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0;\n  margin-inline-start: 0; /* Override [dir] attribute in base <ul> in compiled CSS. */\n  padding: 0;\n  list-style: none;\n\n  @media ($tabs-layout-switch) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n}\n\n.tabs__tab {\n  display: none;\n  margin: 0;\n  margin-block-end: calc(-1 * var(--tabs-border-width));\n\n  &.is-active {\n    display: flex;\n  }\n\n  @media ($tabs-layout-switch) {\n    display: flex;\n    margin-block-end: 0;\n    margin-inline-start: calc(-1 * var(--tabs-border-width));\n  }\n\n  /* Show tabs when JavaScript disabled. */\n  html:not(.js) & {\n    display: flex;\n  }\n\n  /* Show tabs when tabs-expanded class is present. */\n  .tabs.is-expanded & {\n    display: flex;\n  }\n\n  /* Secondary tabs will always be expanded. */\n  .tabs--secondary & {\n    display: block;\n\n    @media ($tabs-layout-switch) {\n      display: flex;\n    }\n  }\n}\n\n.tabs__link {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  height: var(--tabs-height);\n  padding-block: 0;\n  padding-inline: var(--tabs-padding-inline);\n  transition: background-color var(--tabs-transition-duration);\n  text-decoration: none;\n  letter-spacing: var(--tabs-letter-spacing);\n  color: var(--tabs-text-color);\n  border: var(--tabs-border-width) solid var(--tabs-border-color);\n  background-color: var(--tabs-background-color);\n  font-size: var(--tabs-font-size);\n\n  &:hover {\n    color: var(--tabs-text-color-active);\n    background-color: var(--tabs-background-color-hover);\n  }\n\n  &:focus {\n    position: relative;\n    outline: solid 3px var(--tabs-highlight-color);\n    outline-offset: -3px;\n  }\n\n  &.is-active {\n    position: relative; /* Anchor :after pseudo-element. */\n    color: var(--tabs-text-color-active);\n    font-weight: 600;\n\n    /*\n     * We use :after pseudo-element in place of border so edges do not appear\n     * diagonally cut off due to other edges with transparent borders.\n     */\n    &:after {\n      position: absolute;\n      inset-block-start: calc(-1 * var(--tabs-border-width));\n      inset-inline-start: calc(-1 * var(--tabs-border-width));\n      height: calc(100% + var(--tabs-border-width) * 2);\n      content: \"\";\n      border-inline-start: var(--tabs-active-border-size) solid var(--tabs-highlight-color);\n\n      @media ($tabs-layout-switch) {\n        inset-block: auto calc(-1 * var(--tabs-border-width));\n        width: calc(100% + 2 * var(--tabs-border-width));\n        height: 0;\n        border-block-start: var(--tabs-active-border-size) solid var(--tabs-highlight-color);\n        border-inline-start: 0;\n      }\n    }\n  }\n\n  /* No regular borders or background color for secondary tab links. */\n  .tabs--secondary & {\n    @media ($tabs-layout-switch) {\n      border-color: transparent;\n      background-color: transparent;\n    }\n  }\n}\n\n/* Button that opens and closes primary tabs at narrow viewports. */\n.tabs__trigger {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: var(--tabs-height);\n  margin-block: 0;\n  margin-inline: calc(-1 * var(--tabs-border-width)) 0;\n  cursor: pointer;\n  border: solid var(--tabs-border-width) var(--tabs-border-color);\n  background-color: var(--tabs-background-color);\n\n  &:hover {\n    background-color: var(--tabs-background-color-hover);\n  }\n\n  &:focus {\n    position: relative;\n    border-color: var(--tabs-highlight-color);\n    outline: none;\n  }\n\n  /* Button will not work when JavaScript is disabled, so we hide it. */\n  html:not(.js) & {\n    display: none;\n  }\n\n  @media ($tabs-layout-switch) {\n    display: none;\n  }\n}\n\n.tabs__trigger-icon {\n  position: relative;\n  display: block;\n  width: var(--sp);\n  height: 10px;\n  margin-block-start: calc(-2 * var(--tabs-border-width));\n\n  & > span {\n    position: absolute;\n    inset-inline-start: 0;\n    display: block;\n    width: 100%;\n    transition: transform var(--tabs-transition-duration), opacity var(--tabs-transition-duration), top var(--tabs-transition-duration);\n    border-block-start: solid 2px var(--tabs-highlight-color);\n\n    &:nth-child(1) {\n      inset-block-start: 0;\n\n      .tabs__trigger[aria-expanded=\"true\"] & {\n        inset-block-start: calc(50% + 1px);\n        transform: rotate(45deg);\n      }\n    }\n\n    &:nth-child(2) {\n      inset-block-start: calc(50% + 1px);\n\n      .tabs__trigger[aria-expanded=\"true\"] & {\n        opacity: 0;\n      }\n    }\n\n    &:nth-child(3) {\n      inset-block-start: calc(100% + 2px);\n\n      .tabs__trigger[aria-expanded=\"true\"] & {\n        inset-block-start: calc(50% + 1px);\n        transform: rotate(-45deg);\n      }\n    }\n  }\n}\n","/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nGENERAL SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS style tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens\n----------------------------------------\n*/\n/*\n----------------------------------------\nImage path\n----------------------------------------\nRelative image file path\n----------------------------------------\n*/\n/*\n----------------------------------------\nShow compile warnings\n----------------------------------------\nShow Sass warnings when functions and\nmixins use non-standard tokens.\nAND\nShow updates and notifications.\n----------------------------------------\n*/\n/*\n----------------------------------------\nNamespace\n----------------------------------------\n*/\n/*\n----------------------------------------\nPrefix separator\n----------------------------------------\nSet the character the separates\nresponsive and state prefixes from the\nmain class name.\nThe default (\":\") needs to be preceded\nby two backslashes to be properly\nescaped.\n----------------------------------------\n*/\n/*\n----------------------------------------\nLayout grid\n----------------------------------------\nShould the layout grid classes output\nwith !important\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder box sizing\n----------------------------------------\nWhen set to true, sets the box-sizing\nproperty of all site elements to\n`border-box`.\n----------------------------------------\n*/\n/*\n----------------------------------------\nFocus styles\n----------------------------------------\n*/\n/*\n----------------------------------------\nIcons\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nTYPOGRAPHY SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS typography tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens/typesetting/overview/\n----------------------------------------\n*/\n/*\n----------------------------------------\nRoot font size\n----------------------------------------\nSetting $theme-respect-user-font-size to\ntrue sets the root font size to 100% and\nuses ems for media queries\n----------------------------------------\n$theme-root-font-size only applies when\n$theme-respect-user-font-size is set to\nfalse.\n\nThis will set the root font size\nas a specific px value and use px values\nfor media queries.\n\nAccepts true or false\n----------------------------------------\n*/\n/*\n----------------------------------------\nGlobal styles\n----------------------------------------\nAdds basic styling for the following\nunclassed elements:\n\n- paragraph: paragraph text\n- link: links\n- content: paragraph text, links,\n  headings, lists, and tables\n----------------------------------------\n*/\n/*\n----------------------------------------\nBroswer compatibility mode\n----------------------------------------\nWhen true, outputs woff and ttf font \nformats in addition to woff2\n----------------------------------------\n*/\n/*\n----------------------------------------\nFont path\n----------------------------------------\nRelative font file path\n----------------------------------------\n*/\n/*\n----------------------------------------\nCustom typeface tokens\n----------------------------------------\nAdd a new custom typeface token if\nyour project uses a typeface not already\ndefined by USWDS.\n----------------------------------------\nUSWDS defines the following tokens\nby default:\n----------------------------------------\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\n----------------------------------------\nAdd as many new tokens as you have\ncustom typefaces. Reference your new\ntoken(s) in the type-based font settings\nusing the quoted name of the token.\n\nFor example:\n\n$theme-font-type-cond: 'example-font-token';\n\ndisplay-name:\nThe display name of your font\n\ncap-height:\nThe height of a 500px `N` in Sketch\n----------------------------------------\nYou should change `example-[style]-token`\nnames to something more descriptive.\n----------------------------------------\n*/\n/*\n----------------------------------------\nType-based font settings\n----------------------------------------\nSet the type-based tokens for your\nproject from the following tokens,\nor from any new font tokens you added in\n$theme-typeface-tokens.\n----------------------------------------\n'georgia'\n'helvetica'\n'merriweather'\n'open-sans'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n'system'\n'tahoma'\n'verdana'\n----------------------------------------\n*/\n/*\n----------------------------------------\nCustom font stacks\n----------------------------------------\nAdd custom font stacks to any of the\ntype-based fonts. Any USWDS typeface\ntoken already has a default stack.\n\nCustom stacks don't need to include the\nfont's display name. It will\nautomatically appear at the start of\nthe stack.\n----------------------------------------\nExample:\n$theme-font-type-sans: 'source-sans-pro';\n$theme-font-sans-custom-stack: \"Helvetica Neue\", Helvetica, Arial, sans;\n\nOutput:\nfont-family: \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans;\n----------------------------------------\n*/\n/*\n----------------------------------------\nAdd any custom font source files\n----------------------------------------\nIf you want USWDS to generate additional\n@font-face declarations, add your font\ndata below, following the example that\nfollows.\n----------------------------------------\nUSWDS automatically generates @font-face\ndeclarations for the following\n\n'merriweather'\n'public-sans'\n'roboto-mono'\n'source-sans-pro'\n\nThese typefaces not require custom\nsource files.\n----------------------------------------\nEXAMPLE\n\n- dir:\n  Directory relative to $theme-font-path\n- This directory should include fonts saved as\n  .woff2\n  ExampleSerif-Normal.woff2\n\n$theme-font-serif-custom-src: (\n  dir: 'custom/example-serif',\n  roman: (\n    100: false,\n    200: false,\n    300: 'ExampleSerif-Light',\n    400: 'ExampleSerif-Normal',\n    500: false,\n    600: false,\n    700: 'ExampleSerif-Bold',\n    800: false,\n    900: false,\n  ),\n  italic: (\n    100: false,\n    200: false,\n    300: 'ExampleSerif-LightItalic',\n    400: 'ExampleSerif-Italic',\n    500: false,\n    600: false,\n    700: 'ExampleSerif-BoldItalic',\n    800: false,\n    900: false,\n  ),\n);\n----------------------------------------\n*/\n/*\n----------------------------------------\nRole-based font settings\n----------------------------------------\nSet the role-based tokens for your\nproject from the following font-type\ntokens.\n----------------------------------------\n'cond'\n'icon'\n'lang'\n'mono'\n'sans'\n'serif'\n----------------------------------------\n*/\n/*\n----------------------------------------\nType scale\n----------------------------------------\nDefine your project's type scale using\nvalues from the USWDS system type scale\n\n1-20\n----------------------------------------\n*/\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nAssign weights 100-900\nOr use `false` for unneeded weights.\n----------------------------------------\n*/\n/*\n----------------------------------------\nGeneral typography settings\n----------------------------------------\nType scale tokens\n----------------------------------------\nmicro:      10px\n1:          12px\n2:          13px\n3:          14px\n4:          15px\n5:          16px\n6:          17px\n7:          18px\n8:          20px\n9:          22px\n10:         24px\n11:         28px\n12:         32px\n13:         36px\n14:         40px\n15:         48px\n16:         56px\n17:         64px\n18:         80px\n19:         120px\n20:         140px\n----------------------------------------\nLine height tokens\n----------------------------------------\n1:    1\n2:    1.15\n3:    1.35\n4:    1.5\n5:    1.62\n6:    1.75\n----------------------------------------\nFont role tokens\n----------------------------------------\n'ui'\n'heading'\n'body'\n'code'\n'alt'\n----------------------------------------\nMeasure (max-width) tokens\n----------------------------------------\n1:       44ex\n2:       60ex\n3:       64ex\n4:       68ex\n5:       74ex\n6:       88ex\nnone:    none\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nCOLOR SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS color tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens/color\n----------------------------------------\n*/\n/*\n----------------------------------------\nTheme palette colors\n----------------------------------------\n*/\n/*\n----------------------------------------\nState palette colors\n----------------------------------------\n*/\n/*\n----------------------------------------\nGeneral colors\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nCOMPONENT SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS style tokens in the documentation:\nhttps://designsystem.digital.gov/design-tokens\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nSPACING SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS spacing units tokens in the\ndocumentation:\nhttps://designsystem.digital.gov/design-tokens/spacing-units\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder radius\n----------------------------------------\n2px           2px\n0.5           4px\n1             8px\n1.5           12px\n2             16px\n2.5           20px\n3             24px\n4             32px\n5             40px\n6             48px\n7             56px\n8             64px\n9             72px\n----------------------------------------\n*/\n/*\n----------------------------------------\nColumn gap\n----------------------------------------\n2px         2px\n0.5         4px\n1           8px\n2           16px\n3           24px\n4           32px\n5           40px\n6           48px\n----------------------------------------\n*/\n/*\n----------------------------------------\nGrid container max-width\n----------------------------------------\nmobile\nmobile-lg\ntablet\ntablet-lg\ndesktop\ndesktop-lg\nwidescreen\n----------------------------------------\n*/\n/*\n----------------------------------------\nSite\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nUTILITIES SETTINGS\n----------------------------------------\nRead more about settings and\nUSWDS utilities in the documentation:\nhttps://designsystem.digital.gov/utilities\n----------------------------------------\n*/\n/*\n----------------------------------------\nUtility breakpoints\n----------------------------------------\nWhich breakpoints does your project\nneed? Select as `true` any breakpoint\nused by utilities or layout grid\n----------------------------------------\n*/\n/*\n----------------------------------------\nGlobal colors\n----------------------------------------\nThe following palettes will be added to\n- background-color\n- border-color\n- color\n- text-decoration-color\n----------------------------------------\n*/\n/*\n----------------------------------------\nSettings\n----------------------------------------\n*/\n/*\n----------------------------------------\nValues\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-last()\n----------------------------------------\nReturn the last item of a list,\nReturn null if the value is null\n----------------------------------------\n*/\n/*\n----------------------------------------\nappend-important()\n----------------------------------------\nAppend `!important` to a list\n----------------------------------------\n*/\n/*\n----------------------------------------\nde-list()\n----------------------------------------\nTransform a one-element list or arglist\ninto that single element.\n----------------------------------------\n(1) => 1\n((1)) => (1)\n----------------------------------------\n*/\n/*\n----------------------------------------\nuswds-error()\n----------------------------------------\nAllow the system to pass an error as text\nto test error states in unit testing\n----------------------------------------\n*/\n/*\n----------------------------------------\nerror-not-token()\n----------------------------------------\nReturns a common not-a-token error.\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-default()\n----------------------------------------\nReturns the default value from a map\nof project defaults\nget-default(\"bg-color\")\n> $theme-body-background-color\n----------------------------------------\n*/\n/*\n----------------------------------------\nhas-important()\n----------------------------------------\nCheck to see if `!important` is\nbeing passed in a mixin's props\n----------------------------------------\n*/\n/*\n----------------------------------------\nmap-collect()\n----------------------------------------\nCollect multiple maps into a single\nlarge map\nsource: https://gist.github.com/bigglesrocks/d75091700f8f2be5abfe\n----------------------------------------\n*/\n/*\n----------------------------------------\nmap-deep-get()\n----------------------------------------\n@author Hugo Giraudel\n@access public\n@param {Map} $map - Map\n@param {Arglist} $keys - Key chain\n@return {*} - Desired value\n----------------------------------------\n*/\n/*\n----------------------------------------\nmulti-cat()\n----------------------------------------\nConcatenate two lists\n----------------------------------------\n*/\n/*\n----------------------------------------\nremove()\n----------------------------------------\nRemove a value from a list\n----------------------------------------\n*/\n/*\n----------------------------------------\nsmart-quote()\n----------------------------------------\nQuotes strings\nInspects `px`, `xs`, and `xl` numbers\nLeaves bools as is\n----------------------------------------\n*/\n/*\n----------------------------------------\nstr-replace()\n----------------------------------------\nReplace any substring with another\nstring\n----------------------------------------\n*/\n/*\n----------------------------------------\nstr-split()\n----------------------------------------\nSplit a string at a given separator\nand convert into a list of substrings\n----------------------------------------\n*/\n/*\n----------------------------------------\nstrip-unit()\n----------------------------------------\nRemove the unit of a length\n@author Hugo Giraudel\n@param {Number} $number - Number to remove unit from\n@return {Number} - Unitless number\n----------------------------------------\n*/\n/*\n----------------------------------------\nbase-to-map()\n@TODO: Deprecate and delete\n----------------------------------------\nConvert a single base to a USWDS\nvalue map.\n\nCandidate for deprecation if we remove\nisReadable\n----------------------------------------\n*/\n/*\n----------------------------------------\nto-number()\n----------------------------------------\nCasts a string into a number\n----------------------------------------\n@param {String | Number} $value - Value to be parsed\n@return {Number}\n----------------------------------------\n*/\n/*\n----------------------------------------\nunpack()\n----------------------------------------\nCreate lists of single items from lists\nof lists.\n----------------------------------------\n(1, (2.1, 2.2), 3) -->\n(1, 2.1, 2.2, 3)\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-system-color()\n----------------------------------------\nDerive a system color from its\nfamily, value, and vivid or a passed\nvariable that is, itself, a list\n----------------------------------------\n*/\n/*\n----------------------------------------\nset-theme-color()\n----------------------------------------\nDerive a color from a system color token\nor a hex value\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor()\n----------------------------------------\nDerive a color from a color shortcode\n----------------------------------------\n*/\n/*\n----------------------------------------\npx-to-rem()\n----------------------------------------\nConverts a value in px to a value in rem\n----------------------------------------\n*/\n/*\n----------------------------------------\nrem-to-px()\n----------------------------------------\nConverts a value in rem to a value in px\n----------------------------------------\n*/\n/*\n----------------------------------------\nrem-to-user-em()\n----------------------------------------\nConverts a value in rem to a value in\n[user-settings] em for use in media\nqueries\n----------------------------------------\n*/\n/*\n----------------------------------------\nspacing-multiple()\n----------------------------------------\nConverts a spacing unit multiple into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n/*\n----------------------------------------\nnumber-to-token()\n----------------------------------------\nConverts an integer or numeric value\ninto a system value\n\nEx: 0.5   --> '05'\n    -1px  --> 'neg-1px'\n----------------------------------------\n*/\n/*\n----------------------------------------\nunits()\n----------------------------------------\nConverts a spacing unit into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n/*\n----------------------------------------\nProject fonts\n----------------------------------------\nCollects font settings in a map for\nlooping.\n----------------------------------------\n*/\n/*\n----------------------------------------\nLuminance ranges\n----------------------------------------\n*/\n/*\n----------------------------------------\nns()\n----------------------------------------\nAdd a namesspace of $type if that\nnamespace is set to output\n----------------------------------------\n*/\n/*\n----------------------------------------\nLine height\n----------------------------------------\n*/\n/*\n----------------------------------------\nMeasure\n----------------------------------------\n*/\n/*\n----------------------------------------\nvalidate-typeface-token()\n----------------------------------------\nCheck to see if a typeface-token exists.\nThrow an error if a passed token does\nnot exist in the typeface-token map.\n----------------------------------------\n*/\n/*\n----------------------------------------\ncap-height()\n----------------------------------------\nGet the cap height of a valid typeface\n----------------------------------------\n*/\n/*\n----------------------------------------\nconvert-to-font-type()\n----------------------------------------\nConverts a font-role token into a\nfont-type token. Leaves font-type tokens\nunchanged.\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont-sources()\n----------------------------------------\nOutputs a list of font sources used in\na @font-face declaration.\n\n$theme-font-browser-compatibility: true - output woff2, woff, ttf\n$theme-font-browser-compatibility: false - output woff2\n\n@param stem: string - [font path]/[custom-src.dir]/[custom-src.[style].[weight]]\n@output: string\n\nfiletypes must be one of the filetypes set in variables/$project-font-face-filetypes (woff, woff2, ttf)\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-font-stack()\n----------------------------------------\nGet a font stack from a style- or\nrole-based font token.\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-typeface-token()\n----------------------------------------\nGet a typeface token from a font-type or\nfont-role token.\n----------------------------------------\n*/\n/*\n----------------------------------------\nnormalize-type-scale()\n----------------------------------------\nNormalizes a specific face's optical size\nto a set target\n----------------------------------------\n*/\n/*\n----------------------------------------\nsystem-type-scale()\n----------------------------------------\nGet a value from the system type scale\n----------------------------------------\n*/\n/*\n----------------------------------------\nEasing\n----------------------------------------\n*/\n/*  deprecated.scss\n    ---\n    Occasionally the design system will deprecate\n    old variables or functionality. If we replace\n    the old functionality with something new, this is a\n    place to connect the old functionality to the\n    new functionality, in the service of better\n    continuity and backwards compatibility within a\n    major release cycle.\n\n    Note the USWDS version where we deprecated the\n    old functionality in a comment.\n\n    Be sure to update notifications.scss.\n\n    This file should started fresh at each\n    major version.\n*/\n/*\n----------------------------------------\nadvanced-color()\n----------------------------------------\nDerive a color from a color triplet:\n[family], [grade], [variant]\n----------------------------------------\n*/\n/*\n----------------------------------------\nis-system-color-token()\n----------------------------------------\nReturn whether a token is a system\ncolor token\n----------------------------------------\n*/\n/*\n----------------------------------------\nis-theme-color-token()\n----------------------------------------\nReturn whether a token is a theme\ncolor token\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor-token-assignment()\n----------------------------------------\nGet the system token equivalent of any\ntheme color token\n----------------------------------------\n*/\n/*\n----------------------------------------\ndecompose()\n----------------------------------------\nConvert a color token into into a list\nof form [family], [grade], [variant]\nVivid variants return \"vivid\" as the\nvariant.\nIf neither grade nor variant exists,\nreturns 'null'\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor-token-family()\n----------------------------------------\nReturns the family of a color token.\nReturns: color-family\ncolor-token-family(\"accent-warm-vivid\")\n> \"accent-warm\"\ncolor-token-family(\"red-50v\")\n> \"red\"\ncolor-token-variant((\"red\", 50, \"vivid\"))\n> \"red\"\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor-token-grade()\n----------------------------------------\nReturns the grade of a USWDS color token.\nReturns: color-grade\ncolor-token-grade(\"accent-warm\")\n> \"root\"\ncolor-token-grade(\"accent-warm-vivid\")\n> \"root\"\ncolor-token-grade(\"accent-warm-darker\")\n> \"darker\"\ncolor-token-grade(\"red-50v\")\n> 50\ncolor-token-variant((\"red\", 50, \"vivid\"))\n> 50\n----------------------------------------\n*/\n/*\n----------------------------------------\nis-color-token()\n----------------------------------------\nReturns whether a given string is a\nUSWDS color token.\n----------------------------------------\n*/\n/*\n----------------------------------------\npow()\n----------------------------------------\nRaises a unitless number to the power\nof another unitless number\nIncludes helper functions\n----------------------------------------\n*/\n/*\n----------------------------------------\nHelper functions\n----------------------------------------\n*/\n/* factorial()\n----------------------------------------\n*/\n/* summation()\n----------------------------------------\n*/\n/* exp-maclaurin()\n----------------------------------------\n*/\n/* ln()\n----------------------------------------\n*/\n/*\n----------------------------------------\ncalculate-grade()\n----------------------------------------\nDerive the grade equivalent any color,\neven non-token colors\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor-token-type()\n----------------------------------------\nReturns the type of a color token.\nReturns: \"system\" | \"theme\"\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor-token-variant()\n----------------------------------------\nReturns the variant of color token.\nReturns: \"vivid\" | false\ncolor-token-variant(\"accent-warm\")\n> false\ncolor-token-variant(\"accent-warm-vivid\")\n> \"vivid\"\ncolor-token-variant(\"red-50v\")\n> \"vivid\"\ncolor-token-variant((\"red\", 50, \"vivid\"))\n> \"vivid\"\n----------------------------------------\n*/\n/*\n----------------------------------------\nmagic-number()\n----------------------------------------\nReturns the magic number of two color\ngrades. Takes numbers or color tokens.\nmagic-number(50, 10)\nreturn: 40\nmagic-number(\"red-50\", \"red-10\")\nreturn: 40\n----------------------------------------\n*/\n/*\n----------------------------------------\nwcag-magic-number()\n----------------------------------------\nReturns the magic number of a specific\nwcag grade:\n\"AA\"\n\"AA-Large\"\n\"AAA\"\nwcag-magic-number(\"AA\")\n> 50\n----------------------------------------\n*/\n/*\n----------------------------------------\nis-accessible-magic-number()\n----------------------------------------\nReturns whether two grades achieve\nspecified target color contrast\nReturns: true | false\nis-accessible-magic-number(10, 50, \"AA\")\n> false\nis-accessible-magic-number(10, 60, \"AA\")\n> true\n----------------------------------------\n*/\n/*\n----------------------------------------\nnext-token()\n----------------------------------------\nReturns next \"darker\" or \"lighter\" color\ntoken of the same token type and variant.\nReturns: color-token | false\nnext-token(\"accent-warm\", \"lighter\")\n> \"accent-warm-light\"\nnext-token(\"gray-10\", \"lighter\")\n> \"gray-5\"\nnext-token(\"gray-5\", \"lighter\")\n> \"white\"\nnext-token(\"white\", \"lighter\")\n> false\nnext-token(\"red-50v\", \"darker\")\n> \"red-60v\"\nnext-token(\"red-50\", \"darker\")\n> \"red-60\"\nnext-token(\"red-80v\", \"darker\")\n> \"red-90\"\nnext-token(\"red-90\", \"darker\")\n> \"black\"\nnext-token(\"white\", \"darker\")\n> \"gray-5\"\nnext-token(\"black\", \"lighter\")\n> \"gray-90\"\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-link-tokens-from-bg()\n----------------------------------------\nGet accessible link colors for a given\nbackground color\nreturns: link-token, hover-token\nget-link-tokens-from-bg(\n  \"black\",\n  \"red-60\",\n  \"red-10\",\n  \"AA\")\n> \"red-10\", \"red-5\"\nget-link-tokens-from-bg(\n  \"black\",\n  \"red-60v\",\n  \"red-10v\",\n  \"AA-large\")\n> \"red-60v\", \"red-50v\"\nget-link-tokens-from-bg(\n  \"black\",\n  \"red-5v\",\n  \"red-60v\",\n  \"AA\")\n> \"red-5v\", \"white\"\nget-link-tokens-from-bg(\n  \"black\",\n  \"white\",\n  \"red-60v\",\n  \"AA\")\n> \"white\", \"white\"\n----------------------------------------\n*/\n/*\n----------------------------------------\ntest-colors()\n----------------------------------------\nCheck to see if all system colors\nfall between the proper relative\nluminance range for their grade.\nHas a couple quirks, as the luminance()\nfunction returns slightly different\nresults than expected.\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolumns()\n----------------------------------------\noutputs a grid-col number based on\nthe number of desired columns in the\n12-column grid\n\nEx: columns(2) --> 6\n    grid-col(columns(2))\n----------------------------------------\n*/\n/*\n----------------------------------------\nUSWDS Properties\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-uswds-value()\n----------------------------------------\nFinds and outputs a value from the\nUSWDS standard values.\n\nUsed to build other standard utility\nfunctions and mixins.\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-standard-values()\n----------------------------------------\nGets a map of USWDS standard values\nfor a property\n----------------------------------------\n*/\n/*\n----------------------------------------\nborder-radius()\n----------------------------------------\nGet a border-radius from the system\nborder-radii\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont-weight()\nfw()\n----------------------------------------\nGet a font-weight value from the\nsystem font-weight\n----------------------------------------\n*/\n/*\n----------------------------------------\nfeature()\n----------------------------------------\nGets a valid USWDS font feature setting\n----------------------------------------\n*/\n/*\n----------------------------------------\nflex()\n----------------------------------------\nGets a valid USWDS flex value\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont-family()\nfamily()\n----------------------------------------\nGet a font-family stack from a\nrole-based or type-based font family\n----------------------------------------\n*/\n/*\n----------------------------------------\nletter-spacing()\nls()\n----------------------------------------\nGet a letter-spacing value from the\nsystem letter-spacing\n----------------------------------------\n*/\n/*\n----------------------------------------\nmeasure()\n----------------------------------------\nGets a valid USWDS reading line length\n----------------------------------------\n*/\n/*\n----------------------------------------\nopacity()\n----------------------------------------\nGet an opacity from the system\nopacities\n----------------------------------------\n*/\n/*\n----------------------------------------\norder()\n----------------------------------------\nGet an order value from the\nsystem orders\n----------------------------------------\n*/\n/*\n----------------------------------------\nradius()\n----------------------------------------\nGet a border-radius value from the\nsystem letter-spacing\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont-size()\n----------------------------------------\nGet type scale value from a [family] and\n[scale]\n----------------------------------------\n*/\n/*\n----------------------------------------\nz-index()\nz()\n----------------------------------------\nGet a z-index value from the\nsystem z-index\n----------------------------------------\n*/\n/*\n----------------------------------------\nutility-font()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\nNot the public-facing function.\nUsed for building the utilities and\nwithholds certain errors.\n----------------------------------------\n*/\n/*\n----------------------------------------\nfamily()\n----------------------------------------\nGet a font-family stack\n----------------------------------------\n*/\n/*\n----------------------------------------\nsize()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont()\n----------------------------------------\nGet a font-family stack\nAND\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n/*\n----------------------------------------\ntypeset()\n----------------------------------------\nSets:\n- family\n- size\n- line-height\n----------------------------------------\n*/\n/* stylelint-disable max-nesting-depth */\n/*\n----------------------------------------\n@render-pseudoclass\n----------------------------------------\nBuild a pseucoclass utiliy from values\ncalculated in the @render-utilities-in\nloop\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-utility\n----------------------------------------\nBuild a utility from values calculated\nin the @render-utilities-in loop\n----------------------------------------\nTODO: Determine the proper use of\nunquote() in the following. Changed to\naccount for a 'interpolation near\noperators will be simplified in a\nfuture version of Sass' warning.\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-utilities-in\n----------------------------------------\nThe master loop that sets the building\nblocks of utilities from the values\nin individual rule settings and loops\nthrough all possible variants\n----------------------------------------\n*/\n/* stylelint-enable */\n/*  notifications.scss\n    ---\n    Adds a notification at the top of each USWDS\n    compile. Use this file for important notifications\n    and updates to the design system.\n\n    This file should started fresh at each\n    major version.\n\n*/\n/* prettier-ignore */\n/* prettier-ignore */\n/*\n----------------------------------------\nUSWDS with settings overrides\n----------------------------------------\nUncomment the following lines and add a list of changed settings\nin the form $setting: value,\n----------------------------------------\n*/\n/* Breakpoint where tabs switch between vertical and horizontal layouts. */\n.tabs {\n  --tabs-height: var(--spacing-xxl);\n  --tabs-padding-inline: var(--spacing-lg);\n  --tabs-active-border-size: var(--spacing-xxs);\n  --tabs-highlight-color: #005ea2;\n  --tabs-text-color: #3d4551;\n  --tabs-text-color-active: #005ea2;\n  --tabs-letter-spacing: revert;\n  --tabs-font-size: 1rem;\n  --tabs-background-color: #f0f0f0;\n  --tabs-background-color-hover: #dfe1e2;\n  --tabs-border-width: 1px;\n  --tabs-border-color: #dfe1e2;\n  --tabs-transition-duration: 0.2s;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0;\n  margin-inline-start: 0; /* Override [dir] attribute in base <ul> in compiled CSS. */\n  padding: 0;\n  list-style: none;\n}\n@media (min-width: 1000px) {\n  .tabs {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n}\n\n.tabs__tab {\n  display: none;\n  margin: 0;\n  margin-block-end: calc(-1 * var(--tabs-border-width));\n  /* Show tabs when JavaScript disabled. */\n  /* Show tabs when tabs-expanded class is present. */\n  /* Secondary tabs will always be expanded. */\n}\n.tabs__tab.is-active {\n  display: flex;\n}\n@media (min-width: 1000px) {\n  .tabs__tab {\n    display: flex;\n    margin-block-end: 0;\n    margin-inline-start: calc(-1 * var(--tabs-border-width));\n  }\n}\nhtml:not(.js) .tabs__tab {\n  display: flex;\n}\n.tabs.is-expanded .tabs__tab {\n  display: flex;\n}\n.tabs--secondary .tabs__tab {\n  display: block;\n}\n@media (min-width: 1000px) {\n  .tabs--secondary .tabs__tab {\n    display: flex;\n  }\n}\n\n.tabs__link {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  height: var(--tabs-height);\n  padding-block: 0;\n  padding-inline: var(--tabs-padding-inline);\n  transition: background-color var(--tabs-transition-duration);\n  text-decoration: none;\n  letter-spacing: var(--tabs-letter-spacing);\n  color: var(--tabs-text-color);\n  border: var(--tabs-border-width) solid var(--tabs-border-color);\n  background-color: var(--tabs-background-color);\n  font-size: var(--tabs-font-size);\n  /* No regular borders or background color for secondary tab links. */\n}\n.tabs__link:hover {\n  color: var(--tabs-text-color-active);\n  background-color: var(--tabs-background-color-hover);\n}\n.tabs__link:focus {\n  position: relative;\n  outline: solid 3px var(--tabs-highlight-color);\n  outline-offset: -3px;\n}\n.tabs__link.is-active {\n  position: relative; /* Anchor :after pseudo-element. */\n  color: var(--tabs-text-color-active);\n  font-weight: 600;\n  /*\n   * We use :after pseudo-element in place of border so edges do not appear\n   * diagonally cut off due to other edges with transparent borders.\n   */\n}\n.tabs__link.is-active:after {\n  position: absolute;\n  inset-block-start: calc(-1 * var(--tabs-border-width));\n  inset-inline-start: calc(-1 * var(--tabs-border-width));\n  height: calc(100% + var(--tabs-border-width) * 2);\n  content: \"\";\n  border-inline-start: var(--tabs-active-border-size) solid var(--tabs-highlight-color);\n}\n@media (min-width: 1000px) {\n  .tabs__link.is-active:after {\n    inset-block: auto calc(-1 * var(--tabs-border-width));\n    width: calc(100% + 2 * var(--tabs-border-width));\n    height: 0;\n    border-block-start: var(--tabs-active-border-size) solid var(--tabs-highlight-color);\n    border-inline-start: 0;\n  }\n}\n@media (min-width: 1000px) {\n  .tabs--secondary .tabs__link {\n    border-color: transparent;\n    background-color: transparent;\n  }\n}\n\n/* Button that opens and closes primary tabs at narrow viewports. */\n.tabs__trigger {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: var(--tabs-height);\n  margin-block: 0;\n  margin-inline: calc(-1 * var(--tabs-border-width)) 0;\n  cursor: pointer;\n  border: solid var(--tabs-border-width) var(--tabs-border-color);\n  background-color: var(--tabs-background-color);\n  /* Button will not work when JavaScript is disabled, so we hide it. */\n}\n.tabs__trigger:hover {\n  background-color: var(--tabs-background-color-hover);\n}\n.tabs__trigger:focus {\n  position: relative;\n  border-color: var(--tabs-highlight-color);\n  outline: none;\n}\nhtml:not(.js) .tabs__trigger {\n  display: none;\n}\n@media (min-width: 1000px) {\n  .tabs__trigger {\n    display: none;\n  }\n}\n\n.tabs__trigger-icon {\n  position: relative;\n  display: block;\n  width: var(--sp);\n  height: 10px;\n  margin-block-start: calc(-2 * var(--tabs-border-width));\n}\n.tabs__trigger-icon > span {\n  position: absolute;\n  inset-inline-start: 0;\n  display: block;\n  width: 100%;\n  transition: transform var(--tabs-transition-duration), opacity var(--tabs-transition-duration), top var(--tabs-transition-duration);\n  border-block-start: solid 2px var(--tabs-highlight-color);\n}\n.tabs__trigger-icon > span:nth-child(1) {\n  inset-block-start: 0;\n}\n.tabs__trigger[aria-expanded=true] .tabs__trigger-icon > span:nth-child(1) {\n  inset-block-start: calc(50% + 1px);\n  transform: rotate(45deg);\n}\n.tabs__trigger-icon > span:nth-child(2) {\n  inset-block-start: calc(50% + 1px);\n}\n.tabs__trigger[aria-expanded=true] .tabs__trigger-icon > span:nth-child(2) {\n  opacity: 0;\n}\n.tabs__trigger-icon > span:nth-child(3) {\n  inset-block-start: calc(100% + 2px);\n}\n.tabs__trigger[aria-expanded=true] .tabs__trigger-icon > span:nth-child(3) {\n  inset-block-start: calc(50% + 1px);\n  transform: rotate(-45deg);\n}"]}